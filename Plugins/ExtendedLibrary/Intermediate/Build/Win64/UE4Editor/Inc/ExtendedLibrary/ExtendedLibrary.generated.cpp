// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Public/ExtendedLibraryPCH.h"
#include "ExtendedLibrary.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1ExtendedLibrary() {}
	void UXLAbilityManager::StaticRegisterNativesUXLAbilityManager()
	{
	}
	IMPLEMENT_CLASS(UXLAbilityManager, 971471910);
	void UXLAnimationManager::StaticRegisterNativesUXLAnimationManager()
	{
	}
	IMPLEMENT_CLASS(UXLAnimationManager, 2598317695);
static class UEnum* EHealthState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EHealthState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_EHealthState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("EHealthState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EHealthState(EHealthState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("EHealthState"), false, nullptr, nullptr);
static class UEnum* ECombatState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_ECombatState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_ECombatState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("ECombatState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECombatState(ECombatState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("ECombatState"), false, nullptr, nullptr);
static class UEnum* EMovementState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EMovementState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_EMovementState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("EMovementState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMovementState(EMovementState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("EMovementState"), false, nullptr, nullptr);
	void AXLCharacter::StaticRegisterNativesAXLCharacter()
	{
	}
	IMPLEMENT_CLASS(AXLCharacter, 3308995384);
	void UXLCharacterResources::StaticRegisterNativesUXLCharacterResources()
	{
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "CooldownTimer",(Native)&UXLCharacterResources::execCooldownTimer);
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "RegenerateEnergy",(Native)&UXLCharacterResources::execRegenerateEnergy);
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "RegenerateHealth",(Native)&UXLCharacterResources::execRegenerateHealth);
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "RegenerateShield",(Native)&UXLCharacterResources::execRegenerateShield);
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "RegenerateStamina",(Native)&UXLCharacterResources::execRegenerateStamina);
	}
	IMPLEMENT_CLASS(UXLCharacterResources, 3774559643);
	void UXLCharacterStats::StaticRegisterNativesUXLCharacterStats()
	{
	}
	IMPLEMENT_CLASS(UXLCharacterStats, 1023988016);
	void UXLCoverComponent::StaticRegisterNativesUXLCoverComponent()
	{
	}
	IMPLEMENT_CLASS(UXLCoverComponent, 136658281);
	void UXLEffectManager::StaticRegisterNativesUXLEffectManager()
	{
	}
	IMPLEMENT_CLASS(UXLEffectManager, 3507281695);
	void UXLMovementComponent::StaticRegisterNativesUXLMovementComponent()
	{
	}
	IMPLEMENT_CLASS(UXLMovementComponent, 1241303497);
	void AXLPlayerController::StaticRegisterNativesAXLPlayerController()
	{
	}
	IMPLEMENT_CLASS(AXLPlayerController, 4284552502);
	void AXLProjectile::StaticRegisterNativesAXLProjectile()
	{
	}
	IMPLEMENT_CLASS(AXLProjectile, 1302812797);
	void AXLWeapon::StaticRegisterNativesAXLWeapon()
	{
	}
	IMPLEMENT_CLASS(AXLWeapon, 12861424);
	void AXLMeleeWeapon::StaticRegisterNativesAXLMeleeWeapon()
	{
	}
	IMPLEMENT_CLASS(AXLMeleeWeapon, 3624833073);
	void AXLRangedWeapon::StaticRegisterNativesAXLRangedWeapon()
	{
	}
	IMPLEMENT_CLASS(AXLRangedWeapon, 3137990586);
	void UXLWeaponManager::StaticRegisterNativesUXLWeaponManager()
	{
	}
	IMPLEMENT_CLASS(UXLWeaponManager, 3993750127);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimMontage_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UClass* Z_Construct_UClass_UCharacterMovementComponent();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();

	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLAbilityManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLAbilityManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLAnimationManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLAnimationManager();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EHealthState();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_ECombatState();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EMovementState();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLCharacter_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLCharacter();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_CooldownTimer();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateEnergy();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateHealth();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateShield();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateStamina();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCharacterResources_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCharacterResources();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCharacterStats_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCharacterStats();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCoverComponent_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCoverComponent();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLEffectManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLEffectManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLMovementComponent_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLMovementComponent();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLPlayerController_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLPlayerController();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLProjectile_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLProjectile();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLWeapon_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLWeapon();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLMeleeWeapon_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLMeleeWeapon();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLRangedWeapon_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLRangedWeapon();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponManager();
	EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	UClass* Z_Construct_UClass_UXLAbilityManager_NoRegister()
	{
		return UXLAbilityManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLAbilityManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLAbilityManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLAbilityManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLAbilityManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLAbilityManager(Z_Construct_UClass_UXLAbilityManager, &UXLAbilityManager::StaticClass, TEXT("UXLAbilityManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLAbilityManager);
	UClass* Z_Construct_UClass_UXLAnimationManager_NoRegister()
	{
		return UXLAnimationManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLAnimationManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLAnimationManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DeathAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DeathAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DeathAnim, UXLAnimationManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLAnimationManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLAnimationManager.h"));
				MetaData->SetValue(NewProp_DeathAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_DeathAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLAnimationManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLAnimationManager(Z_Construct_UClass_UXLAnimationManager, &UXLAnimationManager::StaticClass, TEXT("UXLAnimationManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLAnimationManager);
	UEnum* Z_Construct_UEnum_ExtendedLibrary_EHealthState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EHealthState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EHealthState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_EHealthState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EHealthState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHealthState::Alive")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHealthState::Dying")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHealthState::Dead")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHealthState::EHealthState_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EHealthState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Character"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Enums/XLHealthState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EHealthState_CRC() { return 336115640U; }
	UEnum* Z_Construct_UEnum_ExtendedLibrary_ECombatState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_ECombatState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ECombatState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_ECombatState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECombatState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECombatState::Passive")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECombatState::Aggressive")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECombatState::ECombatState_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("ECombatState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Character"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Enums/XLCombatState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_ECombatState_CRC() { return 2348786571U; }
	UEnum* Z_Construct_UEnum_ExtendedLibrary_EMovementState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EMovementState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EMovementState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_EMovementState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMovementState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Idle")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Moving")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Sprinting")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Jumping")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Crouching")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Prone")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Dodging")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Climbing")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::EMovementState_MAX")), 8));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EMovementState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Character"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Enums/XLMovementState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EMovementState_CRC() { return 1125351979U; }
	UClass* Z_Construct_UClass_AXLCharacter_NoRegister()
	{
		return AXLCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MovementComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MovementComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MovementComponent, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLMovementComponent_NoRegister());
				UProperty* NewProp_CoverComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CoverComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CoverComponent, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLCoverComponent_NoRegister());
				UProperty* NewProp_CharacterEffects = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterEffects"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterEffects, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLEffectManager_NoRegister());
				UProperty* NewProp_CharacterAnimations = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterAnimations"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterAnimations, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLAnimationManager_NoRegister());
				UProperty* NewProp_CharacterAbilities = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterAbilities"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterAbilities, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLAbilityManager_NoRegister());
				UProperty* NewProp_CharacterWeapons = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterWeapons"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterWeapons, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLWeaponManager_NoRegister());
				UProperty* NewProp_CharacterStats = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterStats"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterStats, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLCharacterStats_NoRegister());
				UProperty* NewProp_CharacterResources = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterResources"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterResources, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLCharacterResources_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Characters/XLCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_MovementComponent, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_MovementComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MovementComponent, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CoverComponent, TEXT("Category"), TEXT("Cover"));
				MetaData->SetValue(NewProp_CoverComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CoverComponent, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterEffects, TEXT("Category"), TEXT("Effects"));
				MetaData->SetValue(NewProp_CharacterEffects, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterEffects, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterAnimations, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_CharacterAnimations, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterAnimations, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterAbilities, TEXT("Category"), TEXT("Abilities"));
				MetaData->SetValue(NewProp_CharacterAbilities, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterAbilities, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterWeapons, TEXT("Category"), TEXT("Weapons"));
				MetaData->SetValue(NewProp_CharacterWeapons, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterWeapons, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterStats, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_CharacterStats, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterStats, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterResources, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_CharacterResources, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterResources, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLCharacter(Z_Construct_UClass_AXLCharacter, &AXLCharacter::StaticClass, TEXT("AXLCharacter"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLCharacter);
	UFunction* Z_Construct_UFunction_UXLCharacterResources_CooldownTimer()
	{
		struct XLCharacterResources_eventCooldownTimer_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CooldownTimer"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventCooldownTimer_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventCooldownTimer_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateEnergy()
	{
		struct XLCharacterResources_eventRegenerateEnergy_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegenerateEnergy"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventRegenerateEnergy_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventRegenerateEnergy_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateHealth()
	{
		struct XLCharacterResources_eventRegenerateHealth_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegenerateHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventRegenerateHealth_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventRegenerateHealth_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateShield()
	{
		struct XLCharacterResources_eventRegenerateShield_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegenerateShield"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventRegenerateShield_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventRegenerateShield_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateStamina()
	{
		struct XLCharacterResources_eventRegenerateStamina_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegenerateStamina"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventRegenerateStamina_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventRegenerateStamina_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UXLCharacterResources_NoRegister()
	{
		return UXLCharacterResources::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLCharacterResources()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLCharacterResources::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_CooldownTimer());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_RegenerateEnergy());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_RegenerateHealth());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_RegenerateShield());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_RegenerateStamina());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaxUltimate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxUltimate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxUltimate, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_ShieldRenerationCooldown = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ShieldRenerationCooldown"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ShieldRenerationCooldown, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_MaxShield = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxShield"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxShield, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_StaminaRenerationCooldown = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaminaRenerationCooldown"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StaminaRenerationCooldown, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_MaxStamina = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxStamina"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxStamina, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_EnergyRenerationCooldown = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnergyRenerationCooldown"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EnergyRenerationCooldown, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_MaxEnergy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxEnergy"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxEnergy, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_HealthRenerationCooldown = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HealthRenerationCooldown"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(HealthRenerationCooldown, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_MaxHealth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxHealth, UXLCharacterResources), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_CooldownTimer(), "CooldownTimer"); // 2812378412
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_RegenerateEnergy(), "RegenerateEnergy"); // 499213532
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_RegenerateHealth(), "RegenerateHealth"); // 1561968213
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_RegenerateShield(), "RegenerateShield"); // 2337256261
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_RegenerateStamina(), "RegenerateStamina"); // 3833291807
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Data/XLCharacterResources.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxUltimate, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxUltimate, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxUltimate, TEXT("ToolTip"), TEXT("The amount of Ultimate the Pawn has"));
				MetaData->SetValue(NewProp_ShieldRenerationCooldown, TEXT("Category"), TEXT("Cooldowns"));
				MetaData->SetValue(NewProp_ShieldRenerationCooldown, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_ShieldRenerationCooldown, TEXT("ToolTip"), TEXT("The amount of time before Shield starts regenerating"));
				MetaData->SetValue(NewProp_MaxShield, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxShield, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxShield, TEXT("ToolTip"), TEXT("The amount of shield the Pawn has"));
				MetaData->SetValue(NewProp_StaminaRenerationCooldown, TEXT("Category"), TEXT("Cooldowns"));
				MetaData->SetValue(NewProp_StaminaRenerationCooldown, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_StaminaRenerationCooldown, TEXT("ToolTip"), TEXT("The amount of time before stamina starts regenerating"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("ToolTip"), TEXT("The amount of stamina the Pawn has"));
				MetaData->SetValue(NewProp_EnergyRenerationCooldown, TEXT("Category"), TEXT("Cooldowns"));
				MetaData->SetValue(NewProp_EnergyRenerationCooldown, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_EnergyRenerationCooldown, TEXT("ToolTip"), TEXT("The amount of time before energy starts regenerating"));
				MetaData->SetValue(NewProp_MaxEnergy, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxEnergy, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxEnergy, TEXT("ToolTip"), TEXT("The amount of energy the Pawn has"));
				MetaData->SetValue(NewProp_HealthRenerationCooldown, TEXT("Category"), TEXT("Cooldowns"));
				MetaData->SetValue(NewProp_HealthRenerationCooldown, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_HealthRenerationCooldown, TEXT("ToolTip"), TEXT("The amount of time before health starts regenerating"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("ToolTip"), TEXT("The amount of health the Pawn has"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLCharacterResources(Z_Construct_UClass_UXLCharacterResources, &UXLCharacterResources::StaticClass, TEXT("UXLCharacterResources"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLCharacterResources);
	UClass* Z_Construct_UClass_UXLCharacterStats_NoRegister()
	{
		return UXLCharacterStats::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLCharacterStats()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLCharacterStats::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_EnergyDefense = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnergyDefense"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EnergyDefense, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_PhysicalDefense = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PhysicalDefense"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PhysicalDefense, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_AbilityPower = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AbilityPower"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AbilityPower, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_CooldownReduction = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CooldownReduction"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CooldownReduction, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_AttackPower = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AttackPower"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AttackPower, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_AttackSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AttackSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AttackSpeed, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_ShieldRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ShieldRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ShieldRegen, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_StaminaRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaminaRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StaminaRegen, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_EnergyRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnergyRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EnergyRegen, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_HealthRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HealthRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(HealthRegen, UXLCharacterStats), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Data/XLCharacterStats.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_EnergyDefense, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_EnergyDefense, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_EnergyDefense, TEXT("ToolTip"), TEXT("The precentage of damage reduced from energy attacks"));
				MetaData->SetValue(NewProp_PhysicalDefense, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_PhysicalDefense, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_PhysicalDefense, TEXT("ToolTip"), TEXT("The precentage of damage reduced from physical attacks"));
				MetaData->SetValue(NewProp_AbilityPower, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_AbilityPower, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_AbilityPower, TEXT("ToolTip"), TEXT("The precentage of damage all abilities are increased"));
				MetaData->SetValue(NewProp_CooldownReduction, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_CooldownReduction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_CooldownReduction, TEXT("ToolTip"), TEXT("The percentage of time all ability cooldowns are reduced"));
				MetaData->SetValue(NewProp_AttackPower, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_AttackPower, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_AttackPower, TEXT("ToolTip"), TEXT("The amount of damage a basic attack deals"));
				MetaData->SetValue(NewProp_AttackSpeed, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_AttackSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_AttackSpeed, TEXT("ToolTip"), TEXT("The time between consecutive attacks"));
				MetaData->SetValue(NewProp_ShieldRegen, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_ShieldRegen, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_ShieldRegen, TEXT("ToolTip"), TEXT("The amount of stamina restored per second"));
				MetaData->SetValue(NewProp_StaminaRegen, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_StaminaRegen, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_StaminaRegen, TEXT("ToolTip"), TEXT("The amount of stamina restored per second"));
				MetaData->SetValue(NewProp_EnergyRegen, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_EnergyRegen, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_EnergyRegen, TEXT("ToolTip"), TEXT("The amount of energy restored per second"));
				MetaData->SetValue(NewProp_HealthRegen, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_HealthRegen, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_HealthRegen, TEXT("ToolTip"), TEXT("The amount of health restored per second"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLCharacterStats(Z_Construct_UClass_UXLCharacterStats, &UXLCharacterStats::StaticClass, TEXT("UXLCharacterStats"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLCharacterStats);
	UClass* Z_Construct_UClass_UXLCoverComponent_NoRegister()
	{
		return UXLCoverComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLCoverComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLCoverComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Components/XLCoverComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLCoverComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLCoverComponent(Z_Construct_UClass_UXLCoverComponent, &UXLCoverComponent::StaticClass, TEXT("UXLCoverComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLCoverComponent);
	UClass* Z_Construct_UClass_UXLEffectManager_NoRegister()
	{
		return UXLEffectManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLEffectManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLEffectManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLEffectManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLEffectManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLEffectManager(Z_Construct_UClass_UXLEffectManager, &UXLEffectManager::StaticClass, TEXT("UXLEffectManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLEffectManager);
	UClass* Z_Construct_UClass_UXLMovementComponent_NoRegister()
	{
		return UXLMovementComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLMovementComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCharacterMovementComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLMovementComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TargetingMovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetingMovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TargetingMovementSpeed, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_CrouchedMovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CrouchedMovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CrouchedMovementSpeed, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_RunningMovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RunningMovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(RunningMovementSpeed, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_BaseMovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseMovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseMovementSpeed, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_MovementSpeedModifier = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MovementSpeedModifier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MovementSpeedModifier, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_BaseLookUpRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseLookUpRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseLookUpRate, UXLMovementComponent), 0x0010000000000000);
				UProperty* NewProp_BaseTurnRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseTurnRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseTurnRate, UXLMovementComponent), 0x0010000000000000);
				UProperty* NewProp_DodgeCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DodgeCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DodgeCost, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_ClimbCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClimbCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ClimbCost, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_VaultCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VaultCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(VaultCost, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_JumpCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("JumpCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(JumpCost, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_SprintCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SprintCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SprintCost, UXLMovementComponent), 0x0010000000010001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Components/XLMovementComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_TargetingMovementSpeed, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_TargetingMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_CrouchedMovementSpeed, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_CrouchedMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_RunningMovementSpeed, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_RunningMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_BaseMovementSpeed, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_BaseMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_MovementSpeedModifier, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_MovementSpeedModifier, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_MovementSpeedModifier, TEXT("ToolTip"), TEXT("Movement Speed"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_DodgeCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_DodgeCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_ClimbCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_ClimbCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_VaultCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_VaultCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_JumpCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_JumpCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_SprintCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_SprintCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLMovementComponent(Z_Construct_UClass_UXLMovementComponent, &UXLMovementComponent::StaticClass, TEXT("UXLMovementComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLMovementComponent);
	UClass* Z_Construct_UClass_AXLPlayerController_NoRegister()
	{
		return AXLPlayerController::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLPlayerController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerController();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLPlayerController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800284;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Controllers/XLPlayerController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Controllers/XLPlayerController.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLPlayerController(Z_Construct_UClass_AXLPlayerController, &AXLPlayerController::StaticClass, TEXT("AXLPlayerController"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLPlayerController);
	UClass* Z_Construct_UClass_AXLProjectile_NoRegister()
	{
		return AXLProjectile::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLProjectile()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLProjectile::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Projectiles/XLProjectile.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Projectiles/XLProjectile.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLProjectile(Z_Construct_UClass_AXLProjectile, &AXLProjectile::StaticClass, TEXT("AXLProjectile"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLProjectile);
	UClass* Z_Construct_UClass_AXLWeapon_NoRegister()
	{
		return AXLWeapon::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLWeapon()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLWeapon::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/XLWeapon.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLWeapon.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLWeapon(Z_Construct_UClass_AXLWeapon, &AXLWeapon::StaticClass, TEXT("AXLWeapon"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLWeapon);
	UClass* Z_Construct_UClass_AXLMeleeWeapon_NoRegister()
	{
		return AXLMeleeWeapon::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLMeleeWeapon()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AXLWeapon();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLMeleeWeapon::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/XLMeleeWeapon.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLMeleeWeapon.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLMeleeWeapon(Z_Construct_UClass_AXLMeleeWeapon, &AXLMeleeWeapon::StaticClass, TEXT("AXLMeleeWeapon"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLMeleeWeapon);
	UClass* Z_Construct_UClass_AXLRangedWeapon_NoRegister()
	{
		return AXLRangedWeapon::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLRangedWeapon()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AXLWeapon();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLRangedWeapon::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/XLRangedWeapon.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLRangedWeapon.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLRangedWeapon(Z_Construct_UClass_AXLRangedWeapon, &AXLRangedWeapon::StaticClass, TEXT("AXLRangedWeapon"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLRangedWeapon);
	UClass* Z_Construct_UClass_UXLWeaponManager_NoRegister()
	{
		return UXLWeaponManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLWeaponManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLWeaponManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DefaultInventory = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(DefaultInventory, UXLWeaponManager), 0x0014000000010001);
				UProperty* NewProp_DefaultInventory_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DefaultInventory, TEXT("DefaultInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_AXLWeapon_NoRegister(), UClass::StaticClass());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLWeaponManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponManager.h"));
				MetaData->SetValue(NewProp_DefaultInventory, TEXT("Category"), TEXT("Inventory"));
				MetaData->SetValue(NewProp_DefaultInventory, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLWeaponManager(Z_Construct_UClass_UXLWeaponManager, &UXLWeaponManager::StaticClass, TEXT("UXLWeaponManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLWeaponManager);
	UPackage* Z_Construct_UPackage__Script_ExtendedLibrary()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/ExtendedLibrary")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000040);
			FGuid Guid;
			Guid.A = 0x9FF0BA5F;
			Guid.B = 0xF02AC98A;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS

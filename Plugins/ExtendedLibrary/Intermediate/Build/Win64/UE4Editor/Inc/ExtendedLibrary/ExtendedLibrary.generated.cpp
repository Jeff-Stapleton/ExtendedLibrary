// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Public/ExtendedLibraryPCH.h"
#include "GeneratedCppIncludes.h"
#include "ExtendedLibrary.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1ExtendedLibrary() {}
FName EXTENDEDLIBRARY_OnPickedUpEvent = FName(TEXT("OnPickedUpEvent"));
FName EXTENDEDLIBRARY_OnRespawnEvent = FName(TEXT("OnRespawnEvent"));
FName EXTENDEDLIBRARY_ServerSetActionState = FName(TEXT("ServerSetActionState"));
FName EXTENDEDLIBRARY_ServerSetCombatState = FName(TEXT("ServerSetCombatState"));
FName EXTENDEDLIBRARY_ServerSetHealthState = FName(TEXT("ServerSetHealthState"));
FName EXTENDEDLIBRARY_ServerSetMovementState = FName(TEXT("ServerSetMovementState"));
FName EXTENDEDLIBRARY_ServerSetPostureState = FName(TEXT("ServerSetPostureState"));
	void UXLMovementComponent::StaticRegisterNativesUXLMovementComponent()
	{
	}
	IMPLEMENT_CLASS(UXLMovementComponent, 1325647508);
static class UEnum* EActionState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EActionState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_EActionState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("EActionState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EActionState(EActionState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("EActionState"), false, nullptr, nullptr);
static class UEnum* ECombatState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_ECombatState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_ECombatState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("ECombatState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECombatState(ECombatState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("ECombatState"), false, nullptr, nullptr);
static class UEnum* EHealthState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EHealthState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_EHealthState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("EHealthState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EHealthState(EHealthState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("EHealthState"), false, nullptr, nullptr);
static class UEnum* EMovementState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EMovementState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_EMovementState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("EMovementState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMovementState(EMovementState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("EMovementState"), false, nullptr, nullptr);
static class UEnum* EPostureState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EPostureState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_EPostureState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("EPostureState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPostureState(EPostureState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("EPostureState"), false, nullptr, nullptr);
	void UXLAbilityManager::StaticRegisterNativesUXLAbilityManager()
	{
		FNativeFunctionRegistrar::RegisterFunction(UXLAbilityManager::StaticClass(), "ActivateAbility",(Native)&UXLAbilityManager::execActivateAbility);
		FNativeFunctionRegistrar::RegisterFunction(UXLAbilityManager::StaticClass(), "DeactivateAbility",(Native)&UXLAbilityManager::execDeactivateAbility);
	}
	IMPLEMENT_CLASS(UXLAbilityManager, 2713932665);
	void AXLCharacter::ServerSetActionState(EActionState::Type State)
	{
		XLCharacter_eventServerSetActionState_Parms Parms;
		Parms.State=State;
		ProcessEvent(FindFunctionChecked(EXTENDEDLIBRARY_ServerSetActionState),&Parms);
	}
	void AXLCharacter::ServerSetCombatState(ECombatState::Type State)
	{
		XLCharacter_eventServerSetCombatState_Parms Parms;
		Parms.State=State;
		ProcessEvent(FindFunctionChecked(EXTENDEDLIBRARY_ServerSetCombatState),&Parms);
	}
	void AXLCharacter::ServerSetHealthState(EHealthState::Type State)
	{
		XLCharacter_eventServerSetHealthState_Parms Parms;
		Parms.State=State;
		ProcessEvent(FindFunctionChecked(EXTENDEDLIBRARY_ServerSetHealthState),&Parms);
	}
	void AXLCharacter::ServerSetMovementState(EMovementState::Type State)
	{
		XLCharacter_eventServerSetMovementState_Parms Parms;
		Parms.State=State;
		ProcessEvent(FindFunctionChecked(EXTENDEDLIBRARY_ServerSetMovementState),&Parms);
	}
	void AXLCharacter::ServerSetPostureState(EPostureState::Type State)
	{
		XLCharacter_eventServerSetPostureState_Parms Parms;
		Parms.State=State;
		ProcessEvent(FindFunctionChecked(EXTENDEDLIBRARY_ServerSetPostureState),&Parms);
	}
	void AXLCharacter::StaticRegisterNativesAXLCharacter()
	{
		FNativeFunctionRegistrar::RegisterFunction(AXLCharacter::StaticClass(), "ServerSetActionState",(Native)&AXLCharacter::execServerSetActionState);
		FNativeFunctionRegistrar::RegisterFunction(AXLCharacter::StaticClass(), "ServerSetCombatState",(Native)&AXLCharacter::execServerSetCombatState);
		FNativeFunctionRegistrar::RegisterFunction(AXLCharacter::StaticClass(), "ServerSetHealthState",(Native)&AXLCharacter::execServerSetHealthState);
		FNativeFunctionRegistrar::RegisterFunction(AXLCharacter::StaticClass(), "ServerSetMovementState",(Native)&AXLCharacter::execServerSetMovementState);
		FNativeFunctionRegistrar::RegisterFunction(AXLCharacter::StaticClass(), "ServerSetPostureState",(Native)&AXLCharacter::execServerSetPostureState);
	}
	IMPLEMENT_CLASS(AXLCharacter, 3971130018);
	void UXLCharacterResources::StaticRegisterNativesUXLCharacterResources()
	{
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "CooldownTimer",(Native)&UXLCharacterResources::execCooldownTimer);
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "RegenerateEnergy",(Native)&UXLCharacterResources::execRegenerateEnergy);
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "RegenerateHealth",(Native)&UXLCharacterResources::execRegenerateHealth);
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "RegenerateShield",(Native)&UXLCharacterResources::execRegenerateShield);
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "RegenerateStamina",(Native)&UXLCharacterResources::execRegenerateStamina);
	}
	IMPLEMENT_CLASS(UXLCharacterResources, 4216659802);
	void UXLAbility::StaticRegisterNativesUXLAbility()
	{
		FNativeFunctionRegistrar::RegisterFunction(UXLAbility::StaticClass(), "ConsumeMana",(Native)&UXLAbility::execConsumeMana);
		FNativeFunctionRegistrar::RegisterFunction(UXLAbility::StaticClass(), "PlayUtilityAnimation",(Native)&UXLAbility::execPlayUtilityAnimation);
		FNativeFunctionRegistrar::RegisterFunction(UXLAbility::StaticClass(), "SetMyPawn",(Native)&UXLAbility::execSetMyPawn);
	}
	IMPLEMENT_CLASS(UXLAbility, 716209819);
	void UXLSelfAbility::StaticRegisterNativesUXLSelfAbility()
	{
	}
	IMPLEMENT_CLASS(UXLSelfAbility, 3064014457);
	void UXLAbilityEffect::StaticRegisterNativesUXLAbilityEffect()
	{
	}
	IMPLEMENT_CLASS(UXLAbilityEffect, 291619780);
	void UXLHoverEffect::StaticRegisterNativesUXLHoverEffect()
	{
	}
	IMPLEMENT_CLASS(UXLHoverEffect, 2598771658);
	void UXLJumpEffect::StaticRegisterNativesUXLJumpEffect()
	{
	}
	IMPLEMENT_CLASS(UXLJumpEffect, 3914429877);
	void UXLPhaseEffect::StaticRegisterNativesUXLPhaseEffect()
	{
	}
	IMPLEMENT_CLASS(UXLPhaseEffect, 2709299859);
	void AXLActionCharacter::StaticRegisterNativesAXLActionCharacter()
	{
	}
	IMPLEMENT_CLASS(AXLActionCharacter, 2304442351);
	void UXLCharacterStats::StaticRegisterNativesUXLCharacterStats()
	{
	}
	IMPLEMENT_CLASS(UXLCharacterStats, 2374726307);
	void UXLCoverComponent::StaticRegisterNativesUXLCoverComponent()
	{
	}
	IMPLEMENT_CLASS(UXLCoverComponent, 2007236210);
	void UXLGameInstance::StaticRegisterNativesUXLGameInstance()
	{
	}
	IMPLEMENT_CLASS(UXLGameInstance, 3566863388);
	void AXLGameMode::StaticRegisterNativesAXLGameMode()
	{
	}
	IMPLEMENT_CLASS(AXLGameMode, 2664965929);
class UScriptStruct* FDecalData::StaticStruct()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FDecalData();
		extern EXTENDEDLIBRARY_API uint32 Get_Z_Construct_UScriptStruct_FDecalData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDecalData, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("DecalData"), sizeof(FDecalData), Get_Z_Construct_UScriptStruct_FDecalData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDecalData(FDecalData::StaticStruct, TEXT("/Script/ExtendedLibrary"), TEXT("DecalData"), false, nullptr, nullptr);
static struct FScriptStruct_ExtendedLibrary_StaticRegisterNativesFDecalData
{
	FScriptStruct_ExtendedLibrary_StaticRegisterNativesFDecalData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DecalData")),new UScriptStruct::TCppStructOps<FDecalData>);
	}
} ScriptStruct_ExtendedLibrary_StaticRegisterNativesFDecalData;
	void AXLImpactEffect::StaticRegisterNativesAXLImpactEffect()
	{
	}
	IMPLEMENT_CLASS(AXLImpactEffect, 515835133);
	void AXLPickup::OnPickedUpEvent()
	{
		ProcessEvent(FindFunctionChecked(EXTENDEDLIBRARY_OnPickedUpEvent),NULL);
	}
	void AXLPickup::OnRespawnEvent()
	{
		ProcessEvent(FindFunctionChecked(EXTENDEDLIBRARY_OnRespawnEvent),NULL);
	}
	void AXLPickup::StaticRegisterNativesAXLPickup()
	{
		FNativeFunctionRegistrar::RegisterFunction(AXLPickup::StaticClass(), "OnRep_IsActive",(Native)&AXLPickup::execOnRep_IsActive);
	}
	IMPLEMENT_CLASS(AXLPickup, 1165043912);
	void UXLPickupEffectManager::StaticRegisterNativesUXLPickupEffectManager()
	{
	}
	IMPLEMENT_CLASS(UXLPickupEffectManager, 924311282);
	void UXLPickupSoundManager::StaticRegisterNativesUXLPickupSoundManager()
	{
	}
	IMPLEMENT_CLASS(UXLPickupSoundManager, 2986559511);
	void UXLPlayerAnimationManager::StaticRegisterNativesUXLPlayerAnimationManager()
	{
	}
	IMPLEMENT_CLASS(UXLPlayerAnimationManager, 1463672328);
	void AXLPlayerController::StaticRegisterNativesAXLPlayerController()
	{
	}
	IMPLEMENT_CLASS(AXLPlayerController, 1596186881);
	void UXLPlayerEffectManager::StaticRegisterNativesUXLPlayerEffectManager()
	{
	}
	IMPLEMENT_CLASS(UXLPlayerEffectManager, 2722168607);
	void UXLPlayerSoundManager::StaticRegisterNativesUXLPlayerSoundManager()
	{
	}
	IMPLEMENT_CLASS(UXLPlayerSoundManager, 1354152002);
	void AXLProjectile::StaticRegisterNativesAXLProjectile()
	{
	}
	IMPLEMENT_CLASS(AXLProjectile, 1558129695);
static class UEnum* EWeaponState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EWeaponState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_EWeaponState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("EWeaponState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EWeaponState(EWeaponState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("EWeaponState"), false, nullptr, nullptr);
	void AXLWeapon::StaticRegisterNativesAXLWeapon()
	{
	}
	IMPLEMENT_CLASS(AXLWeapon, 196504927);
	void AXLMeleeWeapon::StaticRegisterNativesAXLMeleeWeapon()
	{
	}
	IMPLEMENT_CLASS(AXLMeleeWeapon, 3472837688);
	void AXLRangedWeapon::StaticRegisterNativesAXLRangedWeapon()
	{
	}
	IMPLEMENT_CLASS(AXLRangedWeapon, 3158120836);
	void UXLWeaponAnimationManager::StaticRegisterNativesUXLWeaponAnimationManager()
	{
	}
	IMPLEMENT_CLASS(UXLWeaponAnimationManager, 1853508640);
	void UXLWeaponEffectManager::StaticRegisterNativesUXLWeaponEffectManager()
	{
	}
	IMPLEMENT_CLASS(UXLWeaponEffectManager, 2473582283);
	void UXLWeaponManager::StaticRegisterNativesUXLWeaponManager()
	{
	}
	IMPLEMENT_CLASS(UXLWeaponManager, 566661105);
	void UXLWeaponSoundManager::StaticRegisterNativesUXLWeaponSoundManager()
	{
	}
	IMPLEMENT_CLASS(UXLWeaponSoundManager, 2316626088);
class UScriptStruct* FTakeHitInfo::StaticStruct()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FTakeHitInfo();
		extern EXTENDEDLIBRARY_API uint32 Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTakeHitInfo, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("TakeHitInfo"), sizeof(FTakeHitInfo), Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTakeHitInfo(FTakeHitInfo::StaticStruct, TEXT("/Script/ExtendedLibrary"), TEXT("TakeHitInfo"), false, nullptr, nullptr);
static struct FScriptStruct_ExtendedLibrary_StaticRegisterNativesFTakeHitInfo
{
	FScriptStruct_ExtendedLibrary_StaticRegisterNativesFTakeHitInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TakeHitInfo")),new UScriptStruct::TCppStructOps<FTakeHitInfo>);
	}
} ScriptStruct_ExtendedLibrary_StaticRegisterNativesFTakeHitInfo;
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UCharacterMovementComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimMontage_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UGameInstance();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterial_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	ENGINE_API class UClass* Z_Construct_UClass_USoundBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSystem_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPointLightComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSystemComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundCue_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraShake_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRadialDamageEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPointDamageEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDamageEvent();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();

	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLMovementComponent_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLMovementComponent();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EActionState();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_ECombatState();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EHealthState();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EMovementState();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EPostureState();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLAbilityManager_ActivateAbility();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLAbilityManager_DeactivateAbility();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLAbilityManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLAbilityManager();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLCharacter_ServerSetActionState();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLCharacter_ServerSetCombatState();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLCharacter_ServerSetHealthState();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLCharacter_ServerSetMovementState();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLCharacter_ServerSetPostureState();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLCharacter_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLCharacter();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_CooldownTimer();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateEnergy();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateHealth();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateShield();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateStamina();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCharacterResources_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCharacterResources();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLAbility_ConsumeMana();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLAbility_PlayUtilityAnimation();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLAbility_SetMyPawn();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLAbility_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLAbility();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLSelfAbility_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLSelfAbility();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLAbilityEffect_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLAbilityEffect();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLHoverEffect_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLHoverEffect();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLJumpEffect_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLJumpEffect();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPhaseEffect_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPhaseEffect();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLActionCharacter_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLActionCharacter();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCharacterStats_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCharacterStats();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCoverComponent_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCoverComponent();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLGameInstance_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLGameInstance();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLGameMode_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLGameMode();
	EXTENDEDLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FDecalData();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLImpactEffect_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLImpactEffect();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLPickup_OnPickedUpEvent();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLPickup_OnRep_IsActive();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLPickup_OnRespawnEvent();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLPickup_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLPickup();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPickupEffectManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPickupEffectManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPickupSoundManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPickupSoundManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPlayerAnimationManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPlayerAnimationManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLPlayerController_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLPlayerController();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPlayerEffectManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPlayerEffectManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPlayerSoundManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPlayerSoundManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLProjectile_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLProjectile();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EWeaponState();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLWeapon_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLWeapon();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLMeleeWeapon_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLMeleeWeapon();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLRangedWeapon_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLRangedWeapon();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponAnimationManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponAnimationManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponEffectManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponEffectManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponSoundManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponSoundManager();
	EXTENDEDLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FTakeHitInfo();
	EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	UClass* Z_Construct_UClass_UXLMovementComponent_NoRegister()
	{
		return UXLMovementComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLMovementComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCharacterMovementComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLMovementComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_JumpVelocity = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("JumpVelocity"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(JumpVelocity, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_JumpVelocityModifier = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("JumpVelocityModifier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(JumpVelocityModifier, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_TargetingMovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetingMovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TargetingMovementSpeed, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_PronedMovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PronedMovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PronedMovementSpeed, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_CrouchedMovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CrouchedMovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CrouchedMovementSpeed, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_RunningMovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RunningMovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(RunningMovementSpeed, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_BaseMovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseMovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseMovementSpeed, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_MovementSpeedModifier = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MovementSpeedModifier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MovementSpeedModifier, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_BaseLookRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseLookRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseLookRate, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_BaseTurnRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseTurnRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseTurnRate, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_DodgeCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DodgeCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DodgeCost, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_ClimbCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClimbCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ClimbCost, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_VaultCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VaultCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(VaultCost, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_JumpCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("JumpCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(JumpCost, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_SprintCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SprintCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SprintCost, UXLMovementComponent), 0x0010000000010001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("CharacterMovement:Walking"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Components/XLMovementComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_JumpVelocity, TEXT("Category"), TEXT("Jumping"));
				MetaData->SetValue(NewProp_JumpVelocity, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_JumpVelocityModifier, TEXT("Category"), TEXT("Jumping"));
				MetaData->SetValue(NewProp_JumpVelocityModifier, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_JumpVelocityModifier, TEXT("ToolTip"), TEXT("Movement Speed"));
				MetaData->SetValue(NewProp_TargetingMovementSpeed, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_TargetingMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_PronedMovementSpeed, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_PronedMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_CrouchedMovementSpeed, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_CrouchedMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_RunningMovementSpeed, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_RunningMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_BaseMovementSpeed, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_BaseMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_MovementSpeedModifier, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_MovementSpeedModifier, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_MovementSpeedModifier, TEXT("ToolTip"), TEXT("Movement Speed"));
				MetaData->SetValue(NewProp_BaseLookRate, TEXT("Category"), TEXT("Looking"));
				MetaData->SetValue(NewProp_BaseLookRate, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("Category"), TEXT("Looking"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_DodgeCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_DodgeCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_ClimbCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_ClimbCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_VaultCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_VaultCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_JumpCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_JumpCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_SprintCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_SprintCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLMovementComponent(Z_Construct_UClass_UXLMovementComponent, &UXLMovementComponent::StaticClass, TEXT("UXLMovementComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLMovementComponent);
	UEnum* Z_Construct_UEnum_ExtendedLibrary_EActionState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EActionState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EActionState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_EActionState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EActionState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EActionState::Climbing")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EActionState::Dodging")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EActionState::Jumping")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EActionState::None")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EActionState::Sprinting")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EActionState::EActionState_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EActionState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Character"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Enums/XLActionState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EActionState_CRC() { return 3488178307U; }
	UEnum* Z_Construct_UEnum_ExtendedLibrary_ECombatState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_ECombatState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ECombatState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_ECombatState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECombatState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECombatState::Passive")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECombatState::Aggressive")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECombatState::ECombatState_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("ECombatState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Character"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Enums/XLCombatState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_ECombatState_CRC() { return 2348786571U; }
	UEnum* Z_Construct_UEnum_ExtendedLibrary_EHealthState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EHealthState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EHealthState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_EHealthState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EHealthState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHealthState::Alive")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHealthState::Dying")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHealthState::Dead")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHealthState::EHealthState_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EHealthState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Character"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Enums/XLHealthState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EHealthState_CRC() { return 336115640U; }
	UEnum* Z_Construct_UEnum_ExtendedLibrary_EMovementState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EMovementState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EMovementState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_EMovementState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMovementState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::AFK")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Idle")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Moving")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::EMovementState_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EMovementState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Character"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Enums/XLMovementState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EMovementState_CRC() { return 4284991178U; }
	UEnum* Z_Construct_UEnum_ExtendedLibrary_EPostureState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EPostureState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EPostureState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_EPostureState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPostureState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPostureState::Crouching")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPostureState::Prone")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPostureState::Standing")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPostureState::EPostureState_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EPostureState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Character"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Enums/XLPostureState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EPostureState_CRC() { return 1623191575U; }
	UFunction* Z_Construct_UFunction_UXLAbilityManager_ActivateAbility()
	{
		struct XLAbilityManager_eventActivateAbility_Parms
		{
			int32 Ability;
		};
		UObject* Outer=Z_Construct_UClass_UXLAbilityManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ActivateAbility"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(XLAbilityManager_eventActivateAbility_Parms));
			UProperty* NewProp_Ability = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Ability"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Ability, XLAbilityManager_eventActivateAbility_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLAbilityManager.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLAbilityManager_DeactivateAbility()
	{
		struct XLAbilityManager_eventDeactivateAbility_Parms
		{
			int32 Ability;
		};
		UObject* Outer=Z_Construct_UClass_UXLAbilityManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DeactivateAbility"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(XLAbilityManager_eventDeactivateAbility_Parms));
			UProperty* NewProp_Ability = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Ability"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Ability, XLAbilityManager_eventDeactivateAbility_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLAbilityManager.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UXLAbilityManager_NoRegister()
	{
		return UXLAbilityManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLAbilityManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLAbilityManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UXLAbilityManager_ActivateAbility());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLAbilityManager_DeactivateAbility());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AbilitiesBP = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AbilitiesBP"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(AbilitiesBP, UXLAbilityManager), 0x0024080000000001);
				UProperty* NewProp_AbilitiesBP_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AbilitiesBP, TEXT("AbilitiesBP"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_UXLAbility_NoRegister(), UClass::StaticClass());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLAbilityManager_ActivateAbility(), "ActivateAbility"); // 3035564364
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLAbilityManager_DeactivateAbility(), "DeactivateAbility"); // 2510816805
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLAbilityManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLAbilityManager.h"));
				MetaData->SetValue(NewProp_AbilitiesBP, TEXT("Category"), TEXT("Ability"));
				MetaData->SetValue(NewProp_AbilitiesBP, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLAbilityManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLAbilityManager(Z_Construct_UClass_UXLAbilityManager, &UXLAbilityManager::StaticClass, TEXT("UXLAbilityManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLAbilityManager);
	UFunction* Z_Construct_UFunction_AXLCharacter_ServerSetActionState()
	{
		UObject* Outer=Z_Construct_UClass_AXLCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerSetActionState"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535, sizeof(XLCharacter_eventServerSetActionState_Parms));
			UProperty* NewProp_State = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("State"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(State, XLCharacter_eventServerSetActionState_Parms), 0x0010000000000080, Z_Construct_UEnum_ExtendedLibrary_EActionState());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("REPLICATION"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXLCharacter_ServerSetCombatState()
	{
		UObject* Outer=Z_Construct_UClass_AXLCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerSetCombatState"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535, sizeof(XLCharacter_eventServerSetCombatState_Parms));
			UProperty* NewProp_State = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("State"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(State, XLCharacter_eventServerSetCombatState_Parms), 0x0010000000000080, Z_Construct_UEnum_ExtendedLibrary_ECombatState());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXLCharacter_ServerSetHealthState()
	{
		UObject* Outer=Z_Construct_UClass_AXLCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerSetHealthState"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535, sizeof(XLCharacter_eventServerSetHealthState_Parms));
			UProperty* NewProp_State = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("State"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(State, XLCharacter_eventServerSetHealthState_Parms), 0x0010000000000080, Z_Construct_UEnum_ExtendedLibrary_EHealthState());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXLCharacter_ServerSetMovementState()
	{
		UObject* Outer=Z_Construct_UClass_AXLCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerSetMovementState"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535, sizeof(XLCharacter_eventServerSetMovementState_Parms));
			UProperty* NewProp_State = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("State"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(State, XLCharacter_eventServerSetMovementState_Parms), 0x0010000000000080, Z_Construct_UEnum_ExtendedLibrary_EMovementState());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXLCharacter_ServerSetPostureState()
	{
		UObject* Outer=Z_Construct_UClass_AXLCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerSetPostureState"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535, sizeof(XLCharacter_eventServerSetPostureState_Parms));
			UProperty* NewProp_State = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("State"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(State, XLCharacter_eventServerSetPostureState_Parms), 0x0010000000000080, Z_Construct_UEnum_ExtendedLibrary_EPostureState());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AXLCharacter_NoRegister()
	{
		return AXLCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_AXLCharacter_ServerSetActionState());
				OuterClass->LinkChild(Z_Construct_UFunction_AXLCharacter_ServerSetCombatState());
				OuterClass->LinkChild(Z_Construct_UFunction_AXLCharacter_ServerSetHealthState());
				OuterClass->LinkChild(Z_Construct_UFunction_AXLCharacter_ServerSetMovementState());
				OuterClass->LinkChild(Z_Construct_UFunction_AXLCharacter_ServerSetPostureState());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MovementComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MovementComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MovementComponent, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLMovementComponent_NoRegister());
				UProperty* NewProp_CoverComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CoverComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CoverComponent, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLCoverComponent_NoRegister());
				UProperty* NewProp_CharacterEffects = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterEffects"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterEffects, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLPlayerEffectManager_NoRegister());
				UProperty* NewProp_CharacterAnimations = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterAnimations"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterAnimations, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLPlayerAnimationManager_NoRegister());
				UProperty* NewProp_CharacterAbilities = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterAbilities"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterAbilities, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLAbilityManager_NoRegister());
				UProperty* NewProp_CharacterWeapons = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterWeapons"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterWeapons, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLWeaponManager_NoRegister());
				UProperty* NewProp_CharacterStats = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterStats"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterStats, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLCharacterStats_NoRegister());
				UProperty* NewProp_CharacterResources = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterResources"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterResources, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLCharacterResources_NoRegister());
				UProperty* NewProp_PostureState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PostureState"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(PostureState, AXLCharacter), 0x0010000000000005, Z_Construct_UEnum_ExtendedLibrary_EPostureState());
				UProperty* NewProp_MovementState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MovementState"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(MovementState, AXLCharacter), 0x0010000000000005, Z_Construct_UEnum_ExtendedLibrary_EMovementState());
				UProperty* NewProp_HealthState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HealthState"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(HealthState, AXLCharacter), 0x0010000000000005, Z_Construct_UEnum_ExtendedLibrary_EHealthState());
				UProperty* NewProp_CombatState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CombatState"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(CombatState, AXLCharacter), 0x0010000000000005, Z_Construct_UEnum_ExtendedLibrary_ECombatState());
				UProperty* NewProp_ActionState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActionState"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ActionState, AXLCharacter), 0x0010000000000025, Z_Construct_UEnum_ExtendedLibrary_EActionState());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLCharacter_ServerSetActionState(), "ServerSetActionState"); // 2879279903
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLCharacter_ServerSetCombatState(), "ServerSetCombatState"); // 2306466354
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLCharacter_ServerSetHealthState(), "ServerSetHealthState"); // 1906338536
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLCharacter_ServerSetMovementState(), "ServerSetMovementState"); // 3490676883
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLCharacter_ServerSetPostureState(), "ServerSetPostureState"); // 1978783543
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Characters/XLCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_MovementComponent, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_MovementComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MovementComponent, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CoverComponent, TEXT("Category"), TEXT("Cover"));
				MetaData->SetValue(NewProp_CoverComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CoverComponent, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterEffects, TEXT("Category"), TEXT("Effects"));
				MetaData->SetValue(NewProp_CharacterEffects, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterEffects, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterAnimations, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_CharacterAnimations, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterAnimations, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterAbilities, TEXT("Category"), TEXT("Abilities"));
				MetaData->SetValue(NewProp_CharacterAbilities, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterAbilities, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterWeapons, TEXT("Category"), TEXT("Weapons"));
				MetaData->SetValue(NewProp_CharacterWeapons, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterWeapons, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterStats, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_CharacterStats, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterStats, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterResources, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_CharacterResources, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterResources, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterResources, TEXT("ToolTip"), TEXT("COMPONENTS"));
				MetaData->SetValue(NewProp_PostureState, TEXT("Category"), TEXT("State"));
				MetaData->SetValue(NewProp_PostureState, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_MovementState, TEXT("Category"), TEXT("State"));
				MetaData->SetValue(NewProp_MovementState, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_HealthState, TEXT("Category"), TEXT("State"));
				MetaData->SetValue(NewProp_HealthState, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CombatState, TEXT("Category"), TEXT("State"));
				MetaData->SetValue(NewProp_CombatState, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_ActionState, TEXT("Category"), TEXT("State"));
				MetaData->SetValue(NewProp_ActionState, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_ActionState, TEXT("ToolTip"), TEXT("STATES"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLCharacter(Z_Construct_UClass_AXLCharacter, &AXLCharacter::StaticClass, TEXT("AXLCharacter"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLCharacter);
	UFunction* Z_Construct_UFunction_UXLCharacterResources_CooldownTimer()
	{
		struct XLCharacterResources_eventCooldownTimer_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CooldownTimer"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventCooldownTimer_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventCooldownTimer_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateEnergy()
	{
		struct XLCharacterResources_eventRegenerateEnergy_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegenerateEnergy"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventRegenerateEnergy_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventRegenerateEnergy_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateHealth()
	{
		struct XLCharacterResources_eventRegenerateHealth_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegenerateHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventRegenerateHealth_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventRegenerateHealth_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateShield()
	{
		struct XLCharacterResources_eventRegenerateShield_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegenerateShield"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventRegenerateShield_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventRegenerateShield_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateStamina()
	{
		struct XLCharacterResources_eventRegenerateStamina_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegenerateStamina"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventRegenerateStamina_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventRegenerateStamina_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UXLCharacterResources_NoRegister()
	{
		return UXLCharacterResources::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLCharacterResources()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLCharacterResources::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_CooldownTimer());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_RegenerateEnergy());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_RegenerateHealth());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_RegenerateShield());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_RegenerateStamina());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaxUltimate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxUltimate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxUltimate, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_ShieldRenerationCooldown = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ShieldRenerationCooldown"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ShieldRenerationCooldown, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_MaxShield = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxShield"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxShield, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_StaminaRenerationCooldown = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaminaRenerationCooldown"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StaminaRenerationCooldown, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_MaxStamina = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxStamina"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxStamina, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_EnergyRenerationCooldown = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnergyRenerationCooldown"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EnergyRenerationCooldown, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_MaxEnergy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxEnergy"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxEnergy, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_HealthRenerationCooldown = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HealthRenerationCooldown"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(HealthRenerationCooldown, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_MaxHealth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxHealth, UXLCharacterResources), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_CooldownTimer(), "CooldownTimer"); // 2812378412
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_RegenerateEnergy(), "RegenerateEnergy"); // 499213532
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_RegenerateHealth(), "RegenerateHealth"); // 1561968213
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_RegenerateShield(), "RegenerateShield"); // 2337256261
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_RegenerateStamina(), "RegenerateStamina"); // 3833291807
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Data/XLCharacterResources.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxUltimate, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxUltimate, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxUltimate, TEXT("ToolTip"), TEXT("The amount of Ultimate the Pawn has"));
				MetaData->SetValue(NewProp_ShieldRenerationCooldown, TEXT("Category"), TEXT("Cooldowns"));
				MetaData->SetValue(NewProp_ShieldRenerationCooldown, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_ShieldRenerationCooldown, TEXT("ToolTip"), TEXT("The amount of time before Shield starts regenerating"));
				MetaData->SetValue(NewProp_MaxShield, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxShield, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxShield, TEXT("ToolTip"), TEXT("The amount of shield the Pawn has"));
				MetaData->SetValue(NewProp_StaminaRenerationCooldown, TEXT("Category"), TEXT("Cooldowns"));
				MetaData->SetValue(NewProp_StaminaRenerationCooldown, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_StaminaRenerationCooldown, TEXT("ToolTip"), TEXT("The amount of time before stamina starts regenerating"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("ToolTip"), TEXT("The amount of stamina the Pawn has"));
				MetaData->SetValue(NewProp_EnergyRenerationCooldown, TEXT("Category"), TEXT("Cooldowns"));
				MetaData->SetValue(NewProp_EnergyRenerationCooldown, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_EnergyRenerationCooldown, TEXT("ToolTip"), TEXT("The amount of time before energy starts regenerating"));
				MetaData->SetValue(NewProp_MaxEnergy, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxEnergy, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxEnergy, TEXT("ToolTip"), TEXT("The amount of energy the Pawn has"));
				MetaData->SetValue(NewProp_HealthRenerationCooldown, TEXT("Category"), TEXT("Cooldowns"));
				MetaData->SetValue(NewProp_HealthRenerationCooldown, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_HealthRenerationCooldown, TEXT("ToolTip"), TEXT("The amount of time before health starts regenerating"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("ToolTip"), TEXT("The amount of health the Pawn has"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLCharacterResources(Z_Construct_UClass_UXLCharacterResources, &UXLCharacterResources::StaticClass, TEXT("UXLCharacterResources"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLCharacterResources);
	UFunction* Z_Construct_UFunction_UXLAbility_ConsumeMana()
	{
		struct XLAbility_eventConsumeMana_Parms
		{
			float Cost;
			float DeltaSeconds;
		};
		UObject* Outer=Z_Construct_UClass_UXLAbility();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ConsumeMana"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLAbility_eventConsumeMana_Parms));
			UProperty* NewProp_DeltaSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaSeconds, XLAbility_eventConsumeMana_Parms), 0x0010000000000080);
			UProperty* NewProp_Cost = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Cost, XLAbility_eventConsumeMana_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Defaults"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DeltaSeconds"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Ability/XLAbility.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLAbility_PlayUtilityAnimation()
	{
		UObject* Outer=Z_Construct_UClass_UXLAbility();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PlayUtilityAnimation"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Ability/XLAbility.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLAbility_SetMyPawn()
	{
		struct XLAbility_eventSetMyPawn_Parms
		{
			AXLCharacter* Owner;
		};
		UObject* Outer=Z_Construct_UClass_UXLAbility();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetMyPawn"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(XLAbility_eventSetMyPawn_Parms));
			UProperty* NewProp_Owner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Owner"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Owner, XLAbility_eventSetMyPawn_Parms), 0x0010000000000080, Z_Construct_UClass_AXLCharacter_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Ability/XLAbility.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UXLAbility_NoRegister()
	{
		return UXLAbility::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLAbility()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLAbility::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UXLAbility_ConsumeMana());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLAbility_PlayUtilityAnimation());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLAbility_SetMyPawn());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Targets = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Targets"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Targets, UXLAbility), 0x0020080000010001);
				UProperty* NewProp_Targets_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Targets, TEXT("Targets"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AXLCharacter_NoRegister());
				UProperty* NewProp_UtilityAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UtilityAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(UtilityAnim, UXLAbility), 0x0020080000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_AbilityEffects = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AbilityEffects"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(AbilityEffects, UXLAbility), 0x0024080000010001);
				UProperty* NewProp_AbilityEffects_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AbilityEffects, TEXT("AbilityEffects"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_UXLAbilityEffect_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_UtilityDescription = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UtilityDescription"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(UtilityDescription, UXLAbility), 0x0020080000010001);
				UProperty* NewProp_UtilityName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UtilityName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(UtilityName, UXLAbility), 0x0020080000010001);
				UProperty* NewProp_MyPawn = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MyPawn"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MyPawn, UXLAbility), 0x0020080000000014, Z_Construct_UClass_AXLCharacter_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLAbility_ConsumeMana(), "ConsumeMana"); // 1216189361
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLAbility_PlayUtilityAnimation(), "PlayUtilityAnimation"); // 1642845573
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLAbility_SetMyPawn(), "SetMyPawn"); // 1599331149
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("UObject Length"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Ability/XLAbility.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Ability/XLAbility.h"));
				MetaData->SetValue(NewProp_Targets, TEXT("Category"), TEXT("Implementation"));
				MetaData->SetValue(NewProp_Targets, TEXT("ModuleRelativePath"), TEXT("Public/Ability/XLAbility.h"));
				MetaData->SetValue(NewProp_UtilityAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_UtilityAnim, TEXT("ModuleRelativePath"), TEXT("Public/Ability/XLAbility.h"));
				MetaData->SetValue(NewProp_AbilityEffects, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_AbilityEffects, TEXT("ModuleRelativePath"), TEXT("Public/Ability/XLAbility.h"));
				MetaData->SetValue(NewProp_UtilityDescription, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_UtilityDescription, TEXT("ModuleRelativePath"), TEXT("Public/Ability/XLAbility.h"));
				MetaData->SetValue(NewProp_UtilityName, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_UtilityName, TEXT("ModuleRelativePath"), TEXT("Public/Ability/XLAbility.h"));
				MetaData->SetValue(NewProp_MyPawn, TEXT("Category"), TEXT("Defaults"));
				MetaData->SetValue(NewProp_MyPawn, TEXT("ModuleRelativePath"), TEXT("Public/Ability/XLAbility.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLAbility(Z_Construct_UClass_UXLAbility, &UXLAbility::StaticClass, TEXT("UXLAbility"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLAbility);
	UClass* Z_Construct_UClass_UXLSelfAbility_NoRegister()
	{
		return UXLSelfAbility::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLSelfAbility()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UXLAbility();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLSelfAbility::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("UObject Length"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Ability/XLSelfAbility.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Ability/XLSelfAbility.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLSelfAbility(Z_Construct_UClass_UXLSelfAbility, &UXLSelfAbility::StaticClass, TEXT("UXLSelfAbility"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLSelfAbility);
	UClass* Z_Construct_UClass_UXLAbilityEffect_NoRegister()
	{
		return UXLAbilityEffect::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLAbilityEffect()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLAbilityEffect::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("UObject Length"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Ability/AbilityEffects/XLAbilityEffect.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Ability/AbilityEffects/XLAbilityEffect.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLAbilityEffect(Z_Construct_UClass_UXLAbilityEffect, &UXLAbilityEffect::StaticClass, TEXT("UXLAbilityEffect"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLAbilityEffect);
	UClass* Z_Construct_UClass_UXLHoverEffect_NoRegister()
	{
		return UXLHoverEffect::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLHoverEffect()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UXLAbilityEffect();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLHoverEffect::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("UObject Length"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Ability/AbilityEffects/XLHoverEffect.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Ability/AbilityEffects/XLHoverEffect.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLHoverEffect(Z_Construct_UClass_UXLHoverEffect, &UXLHoverEffect::StaticClass, TEXT("UXLHoverEffect"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLHoverEffect);
	UClass* Z_Construct_UClass_UXLJumpEffect_NoRegister()
	{
		return UXLJumpEffect::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLJumpEffect()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UXLAbilityEffect();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLJumpEffect::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("UObject Length"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Ability/AbilityEffects/XLJumpEffect.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Ability/AbilityEffects/XLJumpEffect.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLJumpEffect(Z_Construct_UClass_UXLJumpEffect, &UXLJumpEffect::StaticClass, TEXT("UXLJumpEffect"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLJumpEffect);
	UClass* Z_Construct_UClass_UXLPhaseEffect_NoRegister()
	{
		return UXLPhaseEffect::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLPhaseEffect()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UXLAbilityEffect();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLPhaseEffect::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("UObject Length"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Ability/AbilityEffects/XLPhaseEffect.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Ability/AbilityEffects/XLPhaseEffect.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLPhaseEffect(Z_Construct_UClass_UXLPhaseEffect, &UXLPhaseEffect::StaticClass, TEXT("UXLPhaseEffect"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLPhaseEffect);
	UClass* Z_Construct_UClass_AXLActionCharacter_NoRegister()
	{
		return AXLActionCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLActionCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AXLCharacter();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLActionCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_PerspectiveCamera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PerspectiveCamera"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PerspectiveCamera, AXLActionCharacter), 0x0010000000080008, Z_Construct_UClass_UCameraComponent_NoRegister());
				UProperty* NewProp_FollowCamera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FollowCamera"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FollowCamera, AXLActionCharacter), 0x00100000000a001d, Z_Construct_UClass_UCameraComponent_NoRegister());
				UProperty* NewProp_CameraBoom = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraBoom"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CameraBoom, AXLActionCharacter), 0x00100000000a001d, Z_Construct_UClass_USpringArmComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Characters/XLActionCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLActionCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_PerspectiveCamera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_PerspectiveCamera, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLActionCharacter.h"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLActionCharacter.h"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLActionCharacter.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLActionCharacter(Z_Construct_UClass_AXLActionCharacter, &AXLActionCharacter::StaticClass, TEXT("AXLActionCharacter"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLActionCharacter);
	UClass* Z_Construct_UClass_UXLCharacterStats_NoRegister()
	{
		return UXLCharacterStats::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLCharacterStats()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLCharacterStats::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_EnergyDefense = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnergyDefense"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EnergyDefense, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_PhysicalDefense = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PhysicalDefense"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PhysicalDefense, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_AbilityPower = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AbilityPower"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AbilityPower, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_CooldownReduction = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CooldownReduction"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CooldownReduction, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_AttackPower = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AttackPower"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AttackPower, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_AttackSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AttackSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AttackSpeed, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_ShieldRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ShieldRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ShieldRegen, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_StaminaRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaminaRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StaminaRegen, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_EnergyRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnergyRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EnergyRegen, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_HealthRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HealthRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(HealthRegen, UXLCharacterStats), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Data/XLCharacterStats.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_EnergyDefense, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_EnergyDefense, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_EnergyDefense, TEXT("ToolTip"), TEXT("The precentage of damage reduced from energy attacks"));
				MetaData->SetValue(NewProp_PhysicalDefense, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_PhysicalDefense, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_PhysicalDefense, TEXT("ToolTip"), TEXT("The precentage of damage reduced from physical attacks"));
				MetaData->SetValue(NewProp_AbilityPower, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_AbilityPower, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_AbilityPower, TEXT("ToolTip"), TEXT("The precentage of damage all abilities are increased"));
				MetaData->SetValue(NewProp_CooldownReduction, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_CooldownReduction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_CooldownReduction, TEXT("ToolTip"), TEXT("The percentage of time all ability cooldowns are reduced"));
				MetaData->SetValue(NewProp_AttackPower, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_AttackPower, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_AttackPower, TEXT("ToolTip"), TEXT("The amount of damage a basic attack deals"));
				MetaData->SetValue(NewProp_AttackSpeed, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_AttackSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_AttackSpeed, TEXT("ToolTip"), TEXT("The time between consecutive attacks"));
				MetaData->SetValue(NewProp_ShieldRegen, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_ShieldRegen, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_ShieldRegen, TEXT("ToolTip"), TEXT("The amount of stamina restored per second"));
				MetaData->SetValue(NewProp_StaminaRegen, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_StaminaRegen, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_StaminaRegen, TEXT("ToolTip"), TEXT("The amount of stamina restored per second"));
				MetaData->SetValue(NewProp_EnergyRegen, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_EnergyRegen, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_EnergyRegen, TEXT("ToolTip"), TEXT("The amount of energy restored per second"));
				MetaData->SetValue(NewProp_HealthRegen, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_HealthRegen, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_HealthRegen, TEXT("ToolTip"), TEXT("The amount of health restored per second"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLCharacterStats(Z_Construct_UClass_UXLCharacterStats, &UXLCharacterStats::StaticClass, TEXT("UXLCharacterStats"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLCharacterStats);
	UClass* Z_Construct_UClass_UXLCoverComponent_NoRegister()
	{
		return UXLCoverComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLCoverComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLCoverComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Components/XLCoverComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLCoverComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLCoverComponent(Z_Construct_UClass_UXLCoverComponent, &UXLCoverComponent::StaticClass, TEXT("UXLCoverComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLCoverComponent);
	UClass* Z_Construct_UClass_UXLGameInstance_NoRegister()
	{
		return UXLGameInstance::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLGameInstance()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGameInstance();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLGameInstance::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Game/XLGameInstance.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameInstance.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLGameInstance(Z_Construct_UClass_UXLGameInstance, &UXLGameInstance::StaticClass, TEXT("UXLGameInstance"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLGameInstance);
	UClass* Z_Construct_UClass_AXLGameMode_NoRegister()
	{
		return AXLGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLGameMode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2088028C;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Game/XLGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLGameMode(Z_Construct_UClass_AXLGameMode, &AXLGameMode::StaticClass, TEXT("AXLGameMode"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLGameMode);
	UScriptStruct* Z_Construct_UScriptStruct_FDecalData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UScriptStruct_FDecalData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("DecalData"), sizeof(FDecalData), Get_Z_Construct_UScriptStruct_FDecalData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DecalData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FDecalData>, EStructFlags(0x00000001));
			UProperty* NewProp_LifeSpan = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LifeSpan"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(LifeSpan, FDecalData), 0x0010000000010001);
			UProperty* NewProp_DecalSize = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DecalSize"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DecalSize, FDecalData), 0x0010000000010001);
			UProperty* NewProp_DecalMaterial = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DecalMaterial"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DecalMaterial, FDecalData), 0x0010000000010001, Z_Construct_UClass_UMaterial_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLDecalData.h"));
			MetaData->SetValue(NewProp_LifeSpan, TEXT("Category"), TEXT("Decal"));
			MetaData->SetValue(NewProp_LifeSpan, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLDecalData.h"));
			MetaData->SetValue(NewProp_LifeSpan, TEXT("ToolTip"), TEXT("lifespan"));
			MetaData->SetValue(NewProp_DecalSize, TEXT("Category"), TEXT("Decal"));
			MetaData->SetValue(NewProp_DecalSize, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLDecalData.h"));
			MetaData->SetValue(NewProp_DecalSize, TEXT("ToolTip"), TEXT("quad size (width & height)"));
			MetaData->SetValue(NewProp_DecalMaterial, TEXT("Category"), TEXT("Decal"));
			MetaData->SetValue(NewProp_DecalMaterial, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLDecalData.h"));
			MetaData->SetValue(NewProp_DecalMaterial, TEXT("ToolTip"), TEXT("material"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FDecalData_CRC() { return 2552104729U; }
	UClass* Z_Construct_UClass_AXLImpactEffect_NoRegister()
	{
		return AXLImpactEffect::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLImpactEffect()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLImpactEffect::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SurfaceHit = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SurfaceHit"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SurfaceHit, AXLImpactEffect), 0x0010008000000014, Z_Construct_UScriptStruct_FHitResult());
				UProperty* NewProp_DefaultDecal = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultDecal"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(DefaultDecal, AXLImpactEffect), 0x0010000000010001, Z_Construct_UScriptStruct_FDecalData());
				UProperty* NewProp_EnergySound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnergySound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(EnergySound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_FleshSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FleshSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FleshSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_GrassSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GrassSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(GrassSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_GlassSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GlassSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(GlassSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_WoodSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WoodSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WoodSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_MetalSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MetalSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MetalSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_WaterSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WaterSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WaterSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_DirtSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DirtSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DirtSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_ConcreteSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConcreteSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ConcreteSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_DefaultSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DefaultSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_EnergyFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnergyFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(EnergyFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_FleshFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FleshFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FleshFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_GrassFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GrassFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(GrassFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_GlassFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GlassFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(GlassFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_WoodFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WoodFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WoodFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_MetalFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MetalFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MetalFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_WaterFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WaterFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WaterFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_DirtFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DirtFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DirtFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_ConcreteFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConcreteFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ConcreteFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_DefaultFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DefaultFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_ImpactLightFadeOut = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ImpactLightFadeOut"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ImpactLightFadeOut, AXLImpactEffect), 0x0010000000010001);
				UProperty* NewProp_ImpactLight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ImpactLight"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ImpactLight, AXLImpactEffect), 0x00100000000b0009, Z_Construct_UClass_UPointLightComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Effects/XLImpactEffect.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_SurfaceHit, TEXT("Category"), TEXT("Surface"));
				MetaData->SetValue(NewProp_SurfaceHit, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_SurfaceHit, TEXT("ToolTip"), TEXT("surface data for spawning"));
				MetaData->SetValue(NewProp_DefaultDecal, TEXT("Category"), TEXT("Defaults"));
				MetaData->SetValue(NewProp_DefaultDecal, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_DefaultDecal, TEXT("ToolTip"), TEXT("default decal when material specific override doesn't exist"));
				MetaData->SetValue(NewProp_EnergySound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_EnergySound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_FleshSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_FleshSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_FleshSound, TEXT("ToolTip"), TEXT("impact FX on flesh"));
				MetaData->SetValue(NewProp_GrassSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_GrassSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_GrassSound, TEXT("ToolTip"), TEXT("impact FX on grass"));
				MetaData->SetValue(NewProp_GlassSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_GlassSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_GlassSound, TEXT("ToolTip"), TEXT("impact FX on glass"));
				MetaData->SetValue(NewProp_WoodSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_WoodSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_WoodSound, TEXT("ToolTip"), TEXT("impact FX on wood"));
				MetaData->SetValue(NewProp_MetalSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_MetalSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_MetalSound, TEXT("ToolTip"), TEXT("impact FX on metal"));
				MetaData->SetValue(NewProp_WaterSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_WaterSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_WaterSound, TEXT("ToolTip"), TEXT("impact FX on water"));
				MetaData->SetValue(NewProp_DirtSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_DirtSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_DirtSound, TEXT("ToolTip"), TEXT("impact FX on dirt"));
				MetaData->SetValue(NewProp_ConcreteSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_ConcreteSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_ConcreteSound, TEXT("ToolTip"), TEXT("impact FX on concrete"));
				MetaData->SetValue(NewProp_DefaultSound, TEXT("Category"), TEXT("Defaults"));
				MetaData->SetValue(NewProp_DefaultSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_DefaultSound, TEXT("ToolTip"), TEXT("default impact sound used when material specific override doesn't exist"));
				MetaData->SetValue(NewProp_EnergyFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_EnergyFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_FleshFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_FleshFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_FleshFX, TEXT("ToolTip"), TEXT("impact FX on flesh"));
				MetaData->SetValue(NewProp_GrassFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_GrassFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_GrassFX, TEXT("ToolTip"), TEXT("impact FX on grass"));
				MetaData->SetValue(NewProp_GlassFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_GlassFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_GlassFX, TEXT("ToolTip"), TEXT("impact FX on glass"));
				MetaData->SetValue(NewProp_WoodFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_WoodFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_WoodFX, TEXT("ToolTip"), TEXT("impact FX on wood"));
				MetaData->SetValue(NewProp_MetalFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_MetalFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_MetalFX, TEXT("ToolTip"), TEXT("impact FX on metal"));
				MetaData->SetValue(NewProp_WaterFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_WaterFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_WaterFX, TEXT("ToolTip"), TEXT("impact FX on water"));
				MetaData->SetValue(NewProp_DirtFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_DirtFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_DirtFX, TEXT("ToolTip"), TEXT("impact FX on dirt"));
				MetaData->SetValue(NewProp_ConcreteFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_ConcreteFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_ConcreteFX, TEXT("ToolTip"), TEXT("impact FX on concrete"));
				MetaData->SetValue(NewProp_DefaultFX, TEXT("Category"), TEXT("Defaults"));
				MetaData->SetValue(NewProp_DefaultFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_DefaultFX, TEXT("ToolTip"), TEXT("default impact FX used when material specific override doesn't exist"));
				MetaData->SetValue(NewProp_ImpactLightFadeOut, TEXT("Category"), TEXT("Effect"));
				MetaData->SetValue(NewProp_ImpactLightFadeOut, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_ImpactLightFadeOut, TEXT("ToolTip"), TEXT("how long keep explosion light on?"));
				MetaData->SetValue(NewProp_ImpactLight, TEXT("Category"), TEXT("Effect"));
				MetaData->SetValue(NewProp_ImpactLight, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ImpactLight, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_ImpactLight, TEXT("ToolTip"), TEXT("explosion light"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLImpactEffect(Z_Construct_UClass_AXLImpactEffect, &AXLImpactEffect::StaticClass, TEXT("AXLImpactEffect"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLImpactEffect);
	UFunction* Z_Construct_UFunction_AXLPickup_OnPickedUpEvent()
	{
		UObject* Outer=Z_Construct_UClass_AXLPickup();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPickedUpEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Pickups/XLPickup.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("blueprint event: pickup disappears"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXLPickup_OnRep_IsActive()
	{
		UObject* Outer=Z_Construct_UClass_AXLPickup();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnRep_IsActive"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Pickups/XLPickup.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXLPickup_OnRespawnEvent()
	{
		UObject* Outer=Z_Construct_UClass_AXLPickup();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnRespawnEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Pickups/XLPickup.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("blueprint event: pickup appears"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AXLPickup_NoRegister()
	{
		return AXLPickup::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLPickup()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLPickup::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800081;

				OuterClass->LinkChild(Z_Construct_UFunction_AXLPickup_OnPickedUpEvent());
				OuterClass->LinkChild(Z_Construct_UFunction_AXLPickup_OnRep_IsActive());
				OuterClass->LinkChild(Z_Construct_UFunction_AXLPickup_OnRespawnEvent());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_PickupPSC = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PickupPSC"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PickupPSC, AXLPickup), 0x00400000000b0009, Z_Construct_UClass_UParticleSystemComponent_NoRegister());
				UProperty* NewProp_PickedUpBy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PickedUpBy"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PickedUpBy, AXLPickup), 0x0020080000002020, Z_Construct_UClass_AXLCharacter_NoRegister());
				UProperty* NewProp_RespawnTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RespawnTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(RespawnTime, AXLPickup), 0x0020080000010001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsActive, AXLPickup, uint8);
				UProperty* NewProp_bIsActive = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsActive"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsActive, AXLPickup), 0x0010000100002020, CPP_BOOL_PROPERTY_BITMASK(bIsActive, AXLPickup), sizeof(uint8), false);
				NewProp_bIsActive->RepNotifyFunc = FName(TEXT("OnRep_IsActive"));
				UProperty* NewProp_PickupSounds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PickupSounds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PickupSounds, AXLPickup), 0x001000000008000d, Z_Construct_UClass_UXLPickupSoundManager_NoRegister());
				UProperty* NewProp_PickupEffects = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PickupEffects"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PickupEffects, AXLPickup), 0x001000000008000d, Z_Construct_UClass_UXLPickupEffectManager_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLPickup_OnPickedUpEvent(), "OnPickedUpEvent"); // 273519095
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLPickup_OnRep_IsActive(), "OnRep_IsActive"); // 1493405099
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLPickup_OnRespawnEvent(), "OnRespawnEvent"); // 1638082675
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Pickups/XLPickup.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Pickups/XLPickup.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Base class for pickup objects that can be placed in the world"));
				MetaData->SetValue(NewProp_PickupPSC, TEXT("Category"), TEXT("Effects"));
				MetaData->SetValue(NewProp_PickupPSC, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_PickupPSC, TEXT("ModuleRelativePath"), TEXT("Public/Pickups/XLPickup.h"));
				MetaData->SetValue(NewProp_PickupPSC, TEXT("ToolTip"), TEXT("FX component"));
				MetaData->SetValue(NewProp_PickedUpBy, TEXT("ModuleRelativePath"), TEXT("Public/Pickups/XLPickup.h"));
				MetaData->SetValue(NewProp_PickedUpBy, TEXT("ToolTip"), TEXT("The character who has picked up this pickup"));
				MetaData->SetValue(NewProp_RespawnTime, TEXT("Category"), TEXT("Pickup"));
				MetaData->SetValue(NewProp_RespawnTime, TEXT("ModuleRelativePath"), TEXT("Public/Pickups/XLPickup.h"));
				MetaData->SetValue(NewProp_RespawnTime, TEXT("ToolTip"), TEXT("how long it takes to respawn?"));
				MetaData->SetValue(NewProp_bIsActive, TEXT("ModuleRelativePath"), TEXT("Public/Pickups/XLPickup.h"));
				MetaData->SetValue(NewProp_bIsActive, TEXT("ToolTip"), TEXT("is it ready for interactions?"));
				MetaData->SetValue(NewProp_PickupSounds, TEXT("Category"), TEXT("Sounds"));
				MetaData->SetValue(NewProp_PickupSounds, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_PickupSounds, TEXT("ModuleRelativePath"), TEXT("Public/Pickups/XLPickup.h"));
				MetaData->SetValue(NewProp_PickupEffects, TEXT("Category"), TEXT("Effects"));
				MetaData->SetValue(NewProp_PickupEffects, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_PickupEffects, TEXT("ModuleRelativePath"), TEXT("Public/Pickups/XLPickup.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLPickup(Z_Construct_UClass_AXLPickup, &AXLPickup::StaticClass, TEXT("AXLPickup"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLPickup);
	UClass* Z_Construct_UClass_UXLPickupEffectManager_NoRegister()
	{
		return UXLPickupEffectManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLPickupEffectManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLPickupEffectManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RespawningFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RespawningFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(RespawningFX, UXLPickupEffectManager), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_ActiveFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActiveFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ActiveFX, UXLPickupEffectManager), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLPickupEffectManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPickupEffectManager.h"));
				MetaData->SetValue(NewProp_RespawningFX, TEXT("Category"), TEXT("Effects"));
				MetaData->SetValue(NewProp_RespawningFX, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPickupEffectManager.h"));
				MetaData->SetValue(NewProp_RespawningFX, TEXT("ToolTip"), TEXT("FX of pickup on respawn timer"));
				MetaData->SetValue(NewProp_ActiveFX, TEXT("Category"), TEXT("Effects"));
				MetaData->SetValue(NewProp_ActiveFX, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPickupEffectManager.h"));
				MetaData->SetValue(NewProp_ActiveFX, TEXT("ToolTip"), TEXT("FX of active pickup"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLPickupEffectManager(Z_Construct_UClass_UXLPickupEffectManager, &UXLPickupEffectManager::StaticClass, TEXT("UXLPickupEffectManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLPickupEffectManager);
	UClass* Z_Construct_UClass_UXLPickupSoundManager_NoRegister()
	{
		return UXLPickupSoundManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLPickupSoundManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLPickupSoundManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RespawnSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RespawnSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(RespawnSound, UXLPickupSoundManager), 0x0010000000010001, Z_Construct_UClass_USoundCue_NoRegister());
				UProperty* NewProp_PickupSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PickupSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PickupSound, UXLPickupSoundManager), 0x0010000000010001, Z_Construct_UClass_USoundCue_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLPickupSoundManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPickupSoundManager.h"));
				MetaData->SetValue(NewProp_RespawnSound, TEXT("Category"), TEXT("Effects"));
				MetaData->SetValue(NewProp_RespawnSound, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPickupSoundManager.h"));
				MetaData->SetValue(NewProp_RespawnSound, TEXT("ToolTip"), TEXT("sound played on respawn"));
				MetaData->SetValue(NewProp_PickupSound, TEXT("Category"), TEXT("Effects"));
				MetaData->SetValue(NewProp_PickupSound, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPickupSoundManager.h"));
				MetaData->SetValue(NewProp_PickupSound, TEXT("ToolTip"), TEXT("sound played when player picks it up"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLPickupSoundManager(Z_Construct_UClass_UXLPickupSoundManager, &UXLPickupSoundManager::StaticClass, TEXT("UXLPickupSoundManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLPickupSoundManager);
	UClass* Z_Construct_UClass_UXLPlayerAnimationManager_NoRegister()
	{
		return UXLPlayerAnimationManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLPlayerAnimationManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLPlayerAnimationManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DeathAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DeathAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DeathAnim, UXLPlayerAnimationManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLPlayerAnimationManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPlayerAnimationManager.h"));
				MetaData->SetValue(NewProp_DeathAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_DeathAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPlayerAnimationManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLPlayerAnimationManager(Z_Construct_UClass_UXLPlayerAnimationManager, &UXLPlayerAnimationManager::StaticClass, TEXT("UXLPlayerAnimationManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLPlayerAnimationManager);
	UClass* Z_Construct_UClass_AXLPlayerController_NoRegister()
	{
		return AXLPlayerController::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLPlayerController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerController();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLPlayerController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800284;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MyCharacter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MyCharacter"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MyCharacter, AXLPlayerController), 0x0040000000000000, Z_Construct_UClass_AXLCharacter_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Controllers/XLPlayerController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Controllers/XLPlayerController.h"));
				MetaData->SetValue(NewProp_MyCharacter, TEXT("ModuleRelativePath"), TEXT("Public/Controllers/XLPlayerController.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLPlayerController(Z_Construct_UClass_AXLPlayerController, &AXLPlayerController::StaticClass, TEXT("AXLPlayerController"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLPlayerController);
	UClass* Z_Construct_UClass_UXLPlayerEffectManager_NoRegister()
	{
		return UXLPlayerEffectManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLPlayerEffectManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLPlayerEffectManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLPlayerEffectManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPlayerEffectManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLPlayerEffectManager(Z_Construct_UClass_UXLPlayerEffectManager, &UXLPlayerEffectManager::StaticClass, TEXT("UXLPlayerEffectManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLPlayerEffectManager);
	UClass* Z_Construct_UClass_UXLPlayerSoundManager_NoRegister()
	{
		return UXLPlayerSoundManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLPlayerSoundManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLPlayerSoundManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLPlayerSoundManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPlayerSoundManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLPlayerSoundManager(Z_Construct_UClass_UXLPlayerSoundManager, &UXLPlayerSoundManager::StaticClass, TEXT("UXLPlayerSoundManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLPlayerSoundManager);
	UClass* Z_Construct_UClass_AXLProjectile_NoRegister()
	{
		return AXLProjectile::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLProjectile()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLProjectile::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Projectiles/XLProjectile.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Projectiles/XLProjectile.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLProjectile(Z_Construct_UClass_AXLProjectile, &AXLProjectile::StaticClass, TEXT("AXLProjectile"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLProjectile);
	UEnum* Z_Construct_UEnum_ExtendedLibrary_EWeaponState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EWeaponState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EWeaponState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_EWeaponState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EWeaponState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWeaponState::Idle")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWeaponState::Firing")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWeaponState::Reloading")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWeaponState::Meleeing")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWeaponState::EWeaponState_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EWeaponState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Weapon"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Enums/XLWeaponState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EWeaponState_CRC() { return 2239057730U; }
	UClass* Z_Construct_UClass_AXLWeapon_NoRegister()
	{
		return AXLWeapon::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLWeapon()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLWeapon::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_WeaponEffects = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WeaponEffects"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WeaponEffects, AXLWeapon), 0x001000000008000d, Z_Construct_UClass_UXLWeaponEffectManager_NoRegister());
				UProperty* NewProp_WeaponAnimations = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WeaponAnimations"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WeaponAnimations, AXLWeapon), 0x001000000008000d, Z_Construct_UClass_UXLWeaponAnimationManager_NoRegister());
				UProperty* NewProp_Mesh3P = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Mesh3P"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Mesh3P, AXLWeapon), 0x0010000000090009, Z_Construct_UClass_USkeletalMeshComponent_NoRegister());
				UProperty* NewProp_Character = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Character"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Character, AXLWeapon), 0x0010000000000000, Z_Construct_UClass_AXLCharacter_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/XLWeapon.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLWeapon.h"));
				MetaData->SetValue(NewProp_WeaponEffects, TEXT("Category"), TEXT("Animations"));
				MetaData->SetValue(NewProp_WeaponEffects, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_WeaponEffects, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLWeapon.h"));
				MetaData->SetValue(NewProp_WeaponAnimations, TEXT("Category"), TEXT("Animations"));
				MetaData->SetValue(NewProp_WeaponAnimations, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_WeaponAnimations, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLWeapon.h"));
				MetaData->SetValue(NewProp_Mesh3P, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_Mesh3P, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_Mesh3P, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLWeapon.h"));
				MetaData->SetValue(NewProp_Character, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLWeapon.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLWeapon(Z_Construct_UClass_AXLWeapon, &AXLWeapon::StaticClass, TEXT("AXLWeapon"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLWeapon);
	UClass* Z_Construct_UClass_AXLMeleeWeapon_NoRegister()
	{
		return AXLMeleeWeapon::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLMeleeWeapon()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AXLWeapon();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLMeleeWeapon::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/XLMeleeWeapon.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLMeleeWeapon.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLMeleeWeapon(Z_Construct_UClass_AXLMeleeWeapon, &AXLMeleeWeapon::StaticClass, TEXT("AXLMeleeWeapon"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLMeleeWeapon);
	UClass* Z_Construct_UClass_AXLRangedWeapon_NoRegister()
	{
		return AXLRangedWeapon::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLRangedWeapon()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AXLWeapon();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLRangedWeapon::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/XLRangedWeapon.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLRangedWeapon.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLRangedWeapon(Z_Construct_UClass_AXLRangedWeapon, &AXLRangedWeapon::StaticClass, TEXT("AXLRangedWeapon"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLRangedWeapon);
	UClass* Z_Construct_UClass_UXLWeaponAnimationManager_NoRegister()
	{
		return UXLWeaponAnimationManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLWeaponAnimationManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLWeaponAnimationManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ReloadAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ReloadAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReloadAnim, UXLWeaponAnimationManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_MeleeAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MeleeAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MeleeAnim, UXLWeaponAnimationManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_UnEquipAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UnEquipAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(UnEquipAnim, UXLWeaponAnimationManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_EquipAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EquipAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(EquipAnim, UXLWeaponAnimationManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLWeaponAnimationManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponAnimationManager.h"));
				MetaData->SetValue(NewProp_ReloadAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_ReloadAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponAnimationManager.h"));
				MetaData->SetValue(NewProp_ReloadAnim, TEXT("ToolTip"), TEXT("reload animations"));
				MetaData->SetValue(NewProp_MeleeAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_MeleeAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponAnimationManager.h"));
				MetaData->SetValue(NewProp_MeleeAnim, TEXT("ToolTip"), TEXT("melee animations"));
				MetaData->SetValue(NewProp_UnEquipAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_UnEquipAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponAnimationManager.h"));
				MetaData->SetValue(NewProp_UnEquipAnim, TEXT("ToolTip"), TEXT("holster animations"));
				MetaData->SetValue(NewProp_EquipAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_EquipAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponAnimationManager.h"));
				MetaData->SetValue(NewProp_EquipAnim, TEXT("ToolTip"), TEXT("equip animations"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLWeaponAnimationManager(Z_Construct_UClass_UXLWeaponAnimationManager, &UXLWeaponAnimationManager::StaticClass, TEXT("UXLWeaponAnimationManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLWeaponAnimationManager);
	UClass* Z_Construct_UClass_UXLWeaponEffectManager_NoRegister()
	{
		return UXLWeaponEffectManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLWeaponEffectManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLWeaponEffectManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FireCameraShake = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FireCameraShake"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(FireCameraShake, UXLWeaponEffectManager), 0x0014000000010001, Z_Construct_UClass_UCameraShake_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_TrailFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TrailFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TrailFX, UXLWeaponEffectManager), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_TrailTargetParam = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TrailTargetParam"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(TrailTargetParam, UXLWeaponEffectManager), 0x0010000000010001);
				UProperty* NewProp_MuzzlePSC = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MuzzlePSC"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MuzzlePSC, UXLWeaponEffectManager), 0x0010000000082008, Z_Construct_UClass_UParticleSystemComponent_NoRegister());
				UProperty* NewProp_MuzzleFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MuzzleFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MuzzleFX, UXLWeaponEffectManager), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_MuzzleFXPoint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MuzzleFXPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(MuzzleFXPoint, UXLWeaponEffectManager), 0x0010000000010001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLoopedMuzzleFX, UXLWeaponEffectManager, bool);
				UProperty* NewProp_bLoopedMuzzleFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bLoopedMuzzleFX"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLoopedMuzzleFX, UXLWeaponEffectManager), 0x0010000000010001, CPP_BOOL_PROPERTY_BITMASK(bLoopedMuzzleFX, UXLWeaponEffectManager), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_FireCameraShake, TEXT("Category"), TEXT("CameraShake"));
				MetaData->SetValue(NewProp_FireCameraShake, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_TrailFX, TEXT("Category"), TEXT("TrailFX"));
				MetaData->SetValue(NewProp_TrailFX, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_TrailTargetParam, TEXT("Category"), TEXT("TrailFX"));
				MetaData->SetValue(NewProp_TrailTargetParam, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_MuzzlePSC, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MuzzlePSC, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_MuzzleFX, TEXT("Category"), TEXT("MuzzleFX"));
				MetaData->SetValue(NewProp_MuzzleFX, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_MuzzleFXPoint, TEXT("Category"), TEXT("MuzzleFX"));
				MetaData->SetValue(NewProp_MuzzleFXPoint, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_bLoopedMuzzleFX, TEXT("Category"), TEXT("MuzzleFX"));
				MetaData->SetValue(NewProp_bLoopedMuzzleFX, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLWeaponEffectManager(Z_Construct_UClass_UXLWeaponEffectManager, &UXLWeaponEffectManager::StaticClass, TEXT("UXLWeaponEffectManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLWeaponEffectManager);
	UClass* Z_Construct_UClass_UXLWeaponManager_NoRegister()
	{
		return UXLWeaponManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLWeaponManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLWeaponManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DefaultInventory = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(DefaultInventory, UXLWeaponManager), 0x0014000000010001);
				UProperty* NewProp_DefaultInventory_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DefaultInventory, TEXT("DefaultInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_AXLWeapon_NoRegister(), UClass::StaticClass());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLWeaponManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponManager.h"));
				MetaData->SetValue(NewProp_DefaultInventory, TEXT("Category"), TEXT("Inventory"));
				MetaData->SetValue(NewProp_DefaultInventory, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLWeaponManager(Z_Construct_UClass_UXLWeaponManager, &UXLWeaponManager::StaticClass, TEXT("UXLWeaponManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLWeaponManager);
	UClass* Z_Construct_UClass_UXLWeaponSoundManager_NoRegister()
	{
		return UXLWeaponSoundManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLWeaponSoundManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLWeaponSoundManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ReloadAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ReloadAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReloadAnim, UXLWeaponSoundManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_MeleeAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MeleeAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MeleeAnim, UXLWeaponSoundManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_UnEquipAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UnEquipAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(UnEquipAnim, UXLWeaponSoundManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_EquipAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EquipAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(EquipAnim, UXLWeaponSoundManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLWeaponSoundManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponSoundManager.h"));
				MetaData->SetValue(NewProp_ReloadAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_ReloadAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponSoundManager.h"));
				MetaData->SetValue(NewProp_ReloadAnim, TEXT("ToolTip"), TEXT("reload animations"));
				MetaData->SetValue(NewProp_MeleeAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_MeleeAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponSoundManager.h"));
				MetaData->SetValue(NewProp_MeleeAnim, TEXT("ToolTip"), TEXT("melee animations"));
				MetaData->SetValue(NewProp_UnEquipAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_UnEquipAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponSoundManager.h"));
				MetaData->SetValue(NewProp_UnEquipAnim, TEXT("ToolTip"), TEXT("holster animations"));
				MetaData->SetValue(NewProp_EquipAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_EquipAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponSoundManager.h"));
				MetaData->SetValue(NewProp_EquipAnim, TEXT("ToolTip"), TEXT("equip animations"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLWeaponSoundManager(Z_Construct_UClass_UXLWeaponSoundManager, &UXLWeaponSoundManager::StaticClass, TEXT("UXLWeaponSoundManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLWeaponSoundManager);
	UScriptStruct* Z_Construct_UScriptStruct_FTakeHitInfo()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("TakeHitInfo"), sizeof(FTakeHitInfo), Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TakeHitInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTakeHitInfo>, EStructFlags(0x00000005));
			UProperty* NewProp_RadialDamageEvent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RadialDamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RadialDamageEvent, FTakeHitInfo), 0x0040008000000000, Z_Construct_UScriptStruct_FRadialDamageEvent());
			UProperty* NewProp_PointDamageEvent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PointDamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PointDamageEvent, FTakeHitInfo), 0x0040008000000000, Z_Construct_UScriptStruct_FPointDamageEvent());
			UProperty* NewProp_GeneralDamageEvent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GeneralDamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GeneralDamageEvent, FTakeHitInfo), 0x0040000000000000, Z_Construct_UScriptStruct_FDamageEvent());
			UProperty* NewProp_EnsureReplicationByte = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EnsureReplicationByte"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(EnsureReplicationByte, FTakeHitInfo), 0x0040000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bKilled, FTakeHitInfo, uint8);
			UProperty* NewProp_bKilled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bKilled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bKilled, FTakeHitInfo), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bKilled, FTakeHitInfo), sizeof(uint8), false);
			UProperty* NewProp_DamageEventClassID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DamageEventClassID"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(DamageEventClassID, FTakeHitInfo), 0x0010000000000000);
			UProperty* NewProp_DamageCauser = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DamageCauser"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(DamageCauser, FTakeHitInfo), 0x0014000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_PawnInstigator = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PawnInstigator"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(PawnInstigator, FTakeHitInfo), 0x0014000000000000, Z_Construct_UClass_AXLCharacter_NoRegister());
			UProperty* NewProp_DamageTypeClass = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DamageTypeClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(DamageTypeClass, FTakeHitInfo), 0x0010000000000000, Z_Construct_UClass_UObject_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_ActualDamage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ActualDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ActualDamage, FTakeHitInfo), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_RadialDamageEvent, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_RadialDamageEvent, TEXT("ToolTip"), TEXT("Describes radial damage, if that is what was received."));
			MetaData->SetValue(NewProp_PointDamageEvent, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_PointDamageEvent, TEXT("ToolTip"), TEXT("Describes point damage, if that is what was received."));
			MetaData->SetValue(NewProp_GeneralDamageEvent, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_GeneralDamageEvent, TEXT("ToolTip"), TEXT("Describes general damage."));
			MetaData->SetValue(NewProp_EnsureReplicationByte, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_EnsureReplicationByte, TEXT("ToolTip"), TEXT("A rolling counter used to ensure the struct is dirty and will replicate."));
			MetaData->SetValue(NewProp_bKilled, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_bKilled, TEXT("ToolTip"), TEXT("Rather this was a kill"));
			MetaData->SetValue(NewProp_DamageEventClassID, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_DamageEventClassID, TEXT("ToolTip"), TEXT("Specifies which DamageEvent below describes the damage received."));
			MetaData->SetValue(NewProp_DamageCauser, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_DamageCauser, TEXT("ToolTip"), TEXT("Who actually caused the damage"));
			MetaData->SetValue(NewProp_PawnInstigator, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_PawnInstigator, TEXT("ToolTip"), TEXT("Who hit us"));
			MetaData->SetValue(NewProp_DamageTypeClass, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_DamageTypeClass, TEXT("ToolTip"), TEXT("The damage type we were hit with."));
			MetaData->SetValue(NewProp_ActualDamage, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_ActualDamage, TEXT("ToolTip"), TEXT("The amount of damage actually applied"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC() { return 4007705936U; }
	UPackage* Z_Construct_UPackage__Script_ExtendedLibrary()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/ExtendedLibrary")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xC50CE0F6;
			Guid.B = 0x2D394957;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS

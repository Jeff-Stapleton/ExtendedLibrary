// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

PRAGMA_DISABLE_DEPRECATION_WARNINGS
#ifdef EXTENDEDLIBRARY_XLCharacter_generated_h
#error "XLCharacter.generated.h already included, missing '#pragma once' in XLCharacter.h"
#endif
#define EXTENDEDLIBRARY_XLCharacter_generated_h

#define UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_RPC_WRAPPERS \
	virtual bool ServerSetPostureState_Validate(EPostureState::Type ); \
	virtual void ServerSetPostureState_Implementation(EPostureState::Type State); \
	virtual bool ServerSetMovementState_Validate(EMovementState::Type ); \
	virtual void ServerSetMovementState_Implementation(EMovementState::Type State); \
	virtual bool ServerSetHealthState_Validate(EHealthState::Type ); \
	virtual void ServerSetHealthState_Implementation(EHealthState::Type State); \
	virtual bool ServerSetCombatState_Validate(ECombatState::Type ); \
	virtual void ServerSetCombatState_Implementation(ECombatState::Type State); \
	virtual bool ServerSetActionState_Validate(EActionState::Type ); \
	virtual void ServerSetActionState_Implementation(EActionState::Type State); \
 \
	DECLARE_FUNCTION(execServerSetPostureState) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_State); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		if (!this->ServerSetPostureState_Validate(EPostureState::Type(Z_Param_State))) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSetPostureState_Validate")); \
			return; \
		} \
		this->ServerSetPostureState_Implementation(EPostureState::Type(Z_Param_State)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execServerSetMovementState) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_State); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		if (!this->ServerSetMovementState_Validate(EMovementState::Type(Z_Param_State))) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSetMovementState_Validate")); \
			return; \
		} \
		this->ServerSetMovementState_Implementation(EMovementState::Type(Z_Param_State)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execServerSetHealthState) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_State); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		if (!this->ServerSetHealthState_Validate(EHealthState::Type(Z_Param_State))) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSetHealthState_Validate")); \
			return; \
		} \
		this->ServerSetHealthState_Implementation(EHealthState::Type(Z_Param_State)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execServerSetCombatState) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_State); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		if (!this->ServerSetCombatState_Validate(ECombatState::Type(Z_Param_State))) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSetCombatState_Validate")); \
			return; \
		} \
		this->ServerSetCombatState_Implementation(ECombatState::Type(Z_Param_State)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execServerSetActionState) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_State); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		if (!this->ServerSetActionState_Validate(EActionState::Type(Z_Param_State))) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSetActionState_Validate")); \
			return; \
		} \
		this->ServerSetActionState_Implementation(EActionState::Type(Z_Param_State)); \
		P_NATIVE_END; \
	}


#define UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_RPC_WRAPPERS_NO_PURE_DECLS \
	virtual bool ServerSetPostureState_Validate(EPostureState::Type ); \
	virtual void ServerSetPostureState_Implementation(EPostureState::Type State); \
	virtual bool ServerSetMovementState_Validate(EMovementState::Type ); \
	virtual void ServerSetMovementState_Implementation(EMovementState::Type State); \
	virtual bool ServerSetHealthState_Validate(EHealthState::Type ); \
	virtual void ServerSetHealthState_Implementation(EHealthState::Type State); \
	virtual bool ServerSetCombatState_Validate(ECombatState::Type ); \
	virtual void ServerSetCombatState_Implementation(ECombatState::Type State); \
	virtual bool ServerSetActionState_Validate(EActionState::Type ); \
	virtual void ServerSetActionState_Implementation(EActionState::Type State); \
 \
	DECLARE_FUNCTION(execServerSetPostureState) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_State); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		if (!this->ServerSetPostureState_Validate(EPostureState::Type(Z_Param_State))) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSetPostureState_Validate")); \
			return; \
		} \
		this->ServerSetPostureState_Implementation(EPostureState::Type(Z_Param_State)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execServerSetMovementState) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_State); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		if (!this->ServerSetMovementState_Validate(EMovementState::Type(Z_Param_State))) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSetMovementState_Validate")); \
			return; \
		} \
		this->ServerSetMovementState_Implementation(EMovementState::Type(Z_Param_State)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execServerSetHealthState) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_State); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		if (!this->ServerSetHealthState_Validate(EHealthState::Type(Z_Param_State))) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSetHealthState_Validate")); \
			return; \
		} \
		this->ServerSetHealthState_Implementation(EHealthState::Type(Z_Param_State)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execServerSetCombatState) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_State); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		if (!this->ServerSetCombatState_Validate(ECombatState::Type(Z_Param_State))) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSetCombatState_Validate")); \
			return; \
		} \
		this->ServerSetCombatState_Implementation(ECombatState::Type(Z_Param_State)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execServerSetActionState) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_State); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		if (!this->ServerSetActionState_Validate(EActionState::Type(Z_Param_State))) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSetActionState_Validate")); \
			return; \
		} \
		this->ServerSetActionState_Implementation(EActionState::Type(Z_Param_State)); \
		P_NATIVE_END; \
	}


#define UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_EVENT_PARMS \
	struct XLCharacter_eventServerSetActionState_Parms \
	{ \
		TEnumAsByte<EActionState::Type> State; \
	}; \
	struct XLCharacter_eventServerSetCombatState_Parms \
	{ \
		TEnumAsByte<ECombatState::Type> State; \
	}; \
	struct XLCharacter_eventServerSetHealthState_Parms \
	{ \
		TEnumAsByte<EHealthState::Type> State; \
	}; \
	struct XLCharacter_eventServerSetMovementState_Parms \
	{ \
		TEnumAsByte<EMovementState::Type> State; \
	}; \
	struct XLCharacter_eventServerSetPostureState_Parms \
	{ \
		TEnumAsByte<EPostureState::Type> State; \
	};


extern EXTENDEDLIBRARY_API  FName EXTENDEDLIBRARY_ServerSetActionState;
extern EXTENDEDLIBRARY_API  FName EXTENDEDLIBRARY_ServerSetCombatState;
extern EXTENDEDLIBRARY_API  FName EXTENDEDLIBRARY_ServerSetHealthState;
extern EXTENDEDLIBRARY_API  FName EXTENDEDLIBRARY_ServerSetMovementState;
extern EXTENDEDLIBRARY_API  FName EXTENDEDLIBRARY_ServerSetPostureState;
#define UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_CALLBACK_WRAPPERS
#define UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesAXLCharacter(); \
	friend EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLCharacter(); \
	public: \
	DECLARE_CLASS(AXLCharacter, ACharacter, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/ExtendedLibrary"), NO_API) \
	DECLARE_SERIALIZER(AXLCharacter) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	void GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const override;


#define UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_INCLASS \
	private: \
	static void StaticRegisterNativesAXLCharacter(); \
	friend EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLCharacter(); \
	public: \
	DECLARE_CLASS(AXLCharacter, ACharacter, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/ExtendedLibrary"), NO_API) \
	DECLARE_SERIALIZER(AXLCharacter) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	void GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const override;


#define UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API AXLCharacter(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(AXLCharacter) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, AXLCharacter); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(AXLCharacter); \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	NO_API AXLCharacter(AXLCharacter&&); \
	NO_API AXLCharacter(const AXLCharacter&); \
public:


#define UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_ENHANCED_CONSTRUCTORS \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	NO_API AXLCharacter(AXLCharacter&&); \
	NO_API AXLCharacter(const AXLCharacter&); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, AXLCharacter); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(AXLCharacter); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(AXLCharacter)


#define UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_PRIVATE_PROPERTY_OFFSET
#define UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_14_PROLOG \
	UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_EVENT_PARMS


#define UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_PRIVATE_PROPERTY_OFFSET \
	UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_RPC_WRAPPERS \
	UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_CALLBACK_WRAPPERS \
	UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_INCLASS \
	UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_PRIVATE_PROPERTY_OFFSET \
	UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_RPC_WRAPPERS_NO_PURE_DECLS \
	UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_CALLBACK_WRAPPERS \
	UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_INCLASS_NO_PURE_DECLS \
	UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h_17_ENHANCED_CONSTRUCTORS \
private: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID UE4ExtendedLibrary_Plugins_ExtendedLibrary_Source_ExtendedLibrary_Public_Characters_XLCharacter_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS

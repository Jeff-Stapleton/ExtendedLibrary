// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Public/ExtendedLibraryPCH.h"
#include "ExtendedLibrary.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1ExtendedLibrary() {}
	void UXLAbilityManager::StaticRegisterNativesUXLAbilityManager()
	{
	}
	IMPLEMENT_CLASS(UXLAbilityManager, 971471910);
	void AXLAIController::StaticRegisterNativesAXLAIController()
	{
		FNativeFunctionRegistrar::RegisterFunction(AXLAIController::StaticClass(), "FindClosestEnemy",(Native)&AXLAIController::execFindClosestEnemy);
		FNativeFunctionRegistrar::RegisterFunction(AXLAIController::StaticClass(), "FindClosestEnemyWithLOS",(Native)&AXLAIController::execFindClosestEnemyWithLOS);
		FNativeFunctionRegistrar::RegisterFunction(AXLAIController::StaticClass(), "ShootEnemy",(Native)&AXLAIController::execShootEnemy);
	}
	IMPLEMENT_CLASS(AXLAIController, 3917539558);
static class UEnum* EHealthState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EHealthState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_EHealthState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("EHealthState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EHealthState(EHealthState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("EHealthState"), false, nullptr, nullptr);
static class UEnum* ECombatState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_ECombatState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_ECombatState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("ECombatState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECombatState(ECombatState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("ECombatState"), false, nullptr, nullptr);
static class UEnum* EMovementState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EMovementState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_EMovementState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("EMovementState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMovementState(EMovementState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("EMovementState"), false, nullptr, nullptr);
	void AXLCharacter::StaticRegisterNativesAXLCharacter()
	{
		FNativeFunctionRegistrar::RegisterFunction(AXLCharacter::StaticClass(), "Die",(Native)&AXLCharacter::execDie);
		FNativeFunctionRegistrar::RegisterFunction(AXLCharacter::StaticClass(), "TakeDamage",(Native)&AXLCharacter::execTakeDamage);
	}
	IMPLEMENT_CLASS(AXLCharacter, 1431512938);
	void AXLAI::StaticRegisterNativesAXLAI()
	{
	}
	IMPLEMENT_CLASS(AXLAI, 4013695801);
	void AXLPlayerCharacter::StaticRegisterNativesAXLPlayerCharacter()
	{
	}
	IMPLEMENT_CLASS(AXLPlayerCharacter, 85523595);
	void UXLCharacterResources::StaticRegisterNativesUXLCharacterResources()
	{
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "CooldownTimer",(Native)&UXLCharacterResources::execCooldownTimer);
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "RegenerateEnergy",(Native)&UXLCharacterResources::execRegenerateEnergy);
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "RegenerateHealth",(Native)&UXLCharacterResources::execRegenerateHealth);
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "RegenerateShield",(Native)&UXLCharacterResources::execRegenerateShield);
		FNativeFunctionRegistrar::RegisterFunction(UXLCharacterResources::StaticClass(), "RegenerateStamina",(Native)&UXLCharacterResources::execRegenerateStamina);
	}
	IMPLEMENT_CLASS(UXLCharacterResources, 1245714283);
	void UXLCharacterStats::StaticRegisterNativesUXLCharacterStats()
	{
	}
	IMPLEMENT_CLASS(UXLCharacterStats, 1023988016);
	void UXLCoverComponent::StaticRegisterNativesUXLCoverComponent()
	{
	}
	IMPLEMENT_CLASS(UXLCoverComponent, 136658281);
	void UXLFindPointNearEnemy::StaticRegisterNativesUXLFindPointNearEnemy()
	{
	}
	IMPLEMENT_CLASS(UXLFindPointNearEnemy, 2973291549);
	void UXLGameInstance::StaticRegisterNativesUXLGameInstance()
	{
		FNativeFunctionRegistrar::RegisterFunction(UXLGameInstance::StaticClass(), "BeginHostingQuickMatch",(Native)&UXLGameInstance::execBeginHostingQuickMatch);
		FNativeFunctionRegistrar::RegisterFunction(UXLGameInstance::StaticClass(), "FindSessions",(Native)&UXLGameInstance::execFindSessions);
		FNativeFunctionRegistrar::RegisterFunction(UXLGameInstance::StaticClass(), "GetSessionID",(Native)&UXLGameInstance::execGetSessionID);
		FNativeFunctionRegistrar::RegisterFunction(UXLGameInstance::StaticClass(), "HostGame",(Native)&UXLGameInstance::execHostGame);
		FNativeFunctionRegistrar::RegisterFunction(UXLGameInstance::StaticClass(), "SetSessionID",(Native)&UXLGameInstance::execSetSessionID);
	}
	IMPLEMENT_CLASS(UXLGameInstance, 2076835287);
	void AXLGameMode::StaticRegisterNativesAXLGameMode()
	{
		FNativeFunctionRegistrar::RegisterFunction(AXLGameMode::StaticClass(), "CheckTeamElimination",(Native)&AXLGameMode::execCheckTeamElimination);
		FNativeFunctionRegistrar::RegisterFunction(AXLGameMode::StaticClass(), "FinishMatch",(Native)&AXLGameMode::execFinishMatch);
		FNativeFunctionRegistrar::RegisterFunction(AXLGameMode::StaticClass(), "SetAllowBots",(Native)&AXLGameMode::execSetAllowBots);
	}
	IMPLEMENT_CLASS(AXLGameMode, 3636664437);
	void AXLGameSession::StaticRegisterNativesAXLGameSession()
	{
	}
	IMPLEMENT_CLASS(AXLGameSession, 422053843);
	void AXLGameState::StaticRegisterNativesAXLGameState()
	{
	}
	IMPLEMENT_CLASS(AXLGameState, 2733834228);
	void UXLHasLineOfSightTo::StaticRegisterNativesUXLHasLineOfSightTo()
	{
	}
	IMPLEMENT_CLASS(UXLHasLineOfSightTo, 260267085);
class UScriptStruct* FDecalData::StaticStruct()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FDecalData();
		extern EXTENDEDLIBRARY_API uint32 Get_Z_Construct_UScriptStruct_FDecalData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDecalData, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("DecalData"), sizeof(FDecalData), Get_Z_Construct_UScriptStruct_FDecalData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDecalData(FDecalData::StaticStruct, TEXT("/Script/ExtendedLibrary"), TEXT("DecalData"), false, nullptr, nullptr);
static struct FScriptStruct_ExtendedLibrary_StaticRegisterNativesFDecalData
{
	FScriptStruct_ExtendedLibrary_StaticRegisterNativesFDecalData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DecalData")),new UScriptStruct::TCppStructOps<FDecalData>);
	}
} ScriptStruct_ExtendedLibrary_StaticRegisterNativesFDecalData;
	void AXLImpactEffect::StaticRegisterNativesAXLImpactEffect()
	{
	}
	IMPLEMENT_CLASS(AXLImpactEffect, 676621481);
	void UXLMovementComponent::StaticRegisterNativesUXLMovementComponent()
	{
	}
	IMPLEMENT_CLASS(UXLMovementComponent, 1241303497);
	void UXLPlayerAnimationManager::StaticRegisterNativesUXLPlayerAnimationManager()
	{
	}
	IMPLEMENT_CLASS(UXLPlayerAnimationManager, 3788153921);
	void AXLPlayerController::StaticRegisterNativesAXLPlayerController()
	{
		FNativeFunctionRegistrar::RegisterFunction(AXLPlayerController::StaticClass(), "ClientGameStarted",(Native)&AXLPlayerController::execClientGameStarted);
		FNativeFunctionRegistrar::RegisterFunction(AXLPlayerController::StaticClass(), "ClientStartOnlineGame",(Native)&AXLPlayerController::execClientStartOnlineGame);
	}
	IMPLEMENT_CLASS(AXLPlayerController, 764517741);
	void UXLPlayerEffectManager::StaticRegisterNativesUXLPlayerEffectManager()
	{
	}
	IMPLEMENT_CLASS(UXLPlayerEffectManager, 4086652077);
	void UXLPlayerSoundManager::StaticRegisterNativesUXLPlayerSoundManager()
	{
	}
	IMPLEMENT_CLASS(UXLPlayerSoundManager, 2044852930);
static class UEnum* EWinningState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EWinningState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_EWinningState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("EWinningState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EWinningState(EWinningState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("EWinningState"), false, nullptr, nullptr);
	void AXLPlayerState::StaticRegisterNativesAXLPlayerState()
	{
		FNativeFunctionRegistrar::RegisterFunction(AXLPlayerState::StaticClass(), "BroadcastDeath",(Native)&AXLPlayerState::execBroadcastDeath);
		FNativeFunctionRegistrar::RegisterFunction(AXLPlayerState::StaticClass(), "InformAboutKill",(Native)&AXLPlayerState::execInformAboutKill);
	}
	IMPLEMENT_CLASS(AXLPlayerState, 2445524674);
	void AXLProjectile::StaticRegisterNativesAXLProjectile()
	{
	}
	IMPLEMENT_CLASS(AXLProjectile, 1302812797);
static class UEnum* EWeaponState_StaticEnum()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EWeaponState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ExtendedLibrary_EWeaponState, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("EWeaponState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EWeaponState(EWeaponState_StaticEnum, TEXT("/Script/ExtendedLibrary"), TEXT("EWeaponState"), false, nullptr, nullptr);
	void AXLWeapon::StaticRegisterNativesAXLWeapon()
	{
	}
	IMPLEMENT_CLASS(AXLWeapon, 3830704064);
	void AXLMeleeWeapon::StaticRegisterNativesAXLMeleeWeapon()
	{
	}
	IMPLEMENT_CLASS(AXLMeleeWeapon, 2535715106);
	void AXLRangedWeapon::StaticRegisterNativesAXLRangedWeapon()
	{
	}
	IMPLEMENT_CLASS(AXLRangedWeapon, 1204880803);
	void UXLWeaponAnimationManager::StaticRegisterNativesUXLWeaponAnimationManager()
	{
	}
	IMPLEMENT_CLASS(UXLWeaponAnimationManager, 1632396061);
	void UXLWeaponEffectManager::StaticRegisterNativesUXLWeaponEffectManager()
	{
	}
	IMPLEMENT_CLASS(UXLWeaponEffectManager, 862043445);
	void UXLWeaponManager::StaticRegisterNativesUXLWeaponManager()
	{
	}
	IMPLEMENT_CLASS(UXLWeaponManager, 3993750127);
	void UXLWeaponSoundManager::StaticRegisterNativesUXLWeaponSoundManager()
	{
	}
	IMPLEMENT_CLASS(UXLWeaponSoundManager, 4094684704);
class UScriptStruct* FTakeHitInfo::StaticStruct()
{
	extern EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern EXTENDEDLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FTakeHitInfo();
		extern EXTENDEDLIBRARY_API uint32 Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTakeHitInfo, Z_Construct_UPackage__Script_ExtendedLibrary(), TEXT("TakeHitInfo"), sizeof(FTakeHitInfo), Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTakeHitInfo(FTakeHitInfo::StaticStruct, TEXT("/Script/ExtendedLibrary"), TEXT("TakeHitInfo"), false, nullptr, nullptr);
static struct FScriptStruct_ExtendedLibrary_StaticRegisterNativesFTakeHitInfo
{
	FScriptStruct_ExtendedLibrary_StaticRegisterNativesFTakeHitInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TakeHitInfo")),new UScriptStruct::TCppStructOps<FTakeHitInfo>);
	}
} ScriptStruct_ExtendedLibrary_StaticRegisterNativesFTakeHitInfo;
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();
	AIMODULE_API class UClass* Z_Construct_UClass_AAIController();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTreeComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AController_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDamageEvent();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTree_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_BlackboardBase();
	ENGINE_API class UClass* Z_Construct_UClass_ULocalPlayer_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UGameInstance();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	ENGINE_API class UClass* Z_Construct_UClass_APawn_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameSession();
	ENGINE_API class UClass* Z_Construct_UClass_AGameState();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlackboardKeySelector();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterial_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	ENGINE_API class UClass* Z_Construct_UClass_USoundBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSystem_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPointLightComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCharacterMovementComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimMontage_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController();
	ENGINE_API class UClass* Z_Construct_UClass_UDamageType_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerState();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraShake_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSystemComponent_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRadialDamageEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPointDamageEvent();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();

	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLAbilityManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLAbilityManager();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLAIController_FindClosestEnemy();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLAIController_FindClosestEnemyWithLOS();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLAIController_ShootEnemy();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLAIController_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLAIController();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EHealthState();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_ECombatState();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EMovementState();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLCharacter_Die();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLCharacter_TakeDamage();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLCharacter_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLCharacter();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLAI_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLAI();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLPlayerCharacter_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLPlayerCharacter();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_CooldownTimer();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateEnergy();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateHealth();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateShield();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateStamina();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCharacterResources_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCharacterResources();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCharacterStats_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCharacterStats();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCoverComponent_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLCoverComponent();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLFindPointNearEnemy_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLFindPointNearEnemy();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLGameInstance_BeginHostingQuickMatch();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLGameInstance_FindSessions();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLGameInstance_GetSessionID();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLGameInstance_HostGame();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_UXLGameInstance_SetSessionID();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLGameInstance_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLGameInstance();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLGameMode_CheckTeamElimination();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLGameMode_FinishMatch();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLGameMode_SetAllowBots();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLGameMode_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLGameMode();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLGameSession_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLGameSession();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLGameState_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLGameState();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLHasLineOfSightTo_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLHasLineOfSightTo();
	EXTENDEDLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FDecalData();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLImpactEffect_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLImpactEffect();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLMovementComponent_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLMovementComponent();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPlayerAnimationManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPlayerAnimationManager();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLPlayerController_ClientGameStarted();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLPlayerController_ClientStartOnlineGame();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLPlayerController_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLPlayerController();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPlayerEffectManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPlayerEffectManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPlayerSoundManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLPlayerSoundManager();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EWinningState();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLPlayerState_BroadcastDeath();
	EXTENDEDLIBRARY_API class UFunction* Z_Construct_UFunction_AXLPlayerState_InformAboutKill();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLPlayerState_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLPlayerState();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLProjectile_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLProjectile();
	EXTENDEDLIBRARY_API class UEnum* Z_Construct_UEnum_ExtendedLibrary_EWeaponState();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLWeapon_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLWeapon();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLMeleeWeapon_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLMeleeWeapon();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLRangedWeapon_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_AXLRangedWeapon();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponAnimationManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponAnimationManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponEffectManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponEffectManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponManager();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponSoundManager_NoRegister();
	EXTENDEDLIBRARY_API class UClass* Z_Construct_UClass_UXLWeaponSoundManager();
	EXTENDEDLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FTakeHitInfo();
	EXTENDEDLIBRARY_API class UPackage* Z_Construct_UPackage__Script_ExtendedLibrary();
	UClass* Z_Construct_UClass_UXLAbilityManager_NoRegister()
	{
		return UXLAbilityManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLAbilityManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLAbilityManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLAbilityManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLAbilityManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLAbilityManager(Z_Construct_UClass_UXLAbilityManager, &UXLAbilityManager::StaticClass, TEXT("UXLAbilityManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLAbilityManager);
	UFunction* Z_Construct_UFunction_AXLAIController_FindClosestEnemy()
	{
		UObject* Outer=Z_Construct_UClass_AXLAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FindClosestEnemy"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Controllers/XLAIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Finds the closest enemy and sets them as current target"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXLAIController_FindClosestEnemyWithLOS()
	{
		struct XLAIController_eventFindClosestEnemyWithLOS_Parms
		{
			AXLPlayerCharacter* ExcludeEnemy;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AXLAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FindClosestEnemyWithLOS"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLAIController_eventFindClosestEnemyWithLOS_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, XLAIController_eventFindClosestEnemyWithLOS_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, XLAIController_eventFindClosestEnemyWithLOS_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, XLAIController_eventFindClosestEnemyWithLOS_Parms), sizeof(bool), true);
			UProperty* NewProp_ExcludeEnemy = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExcludeEnemy"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ExcludeEnemy, XLAIController_eventFindClosestEnemyWithLOS_Parms), 0x0010000000000080, Z_Construct_UClass_AXLPlayerCharacter_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Controllers/XLAIController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXLAIController_ShootEnemy()
	{
		UObject* Outer=Z_Construct_UClass_AXLAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ShootEnemy"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Controllers/XLAIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If there is line of sight to current enemy, start firing at them"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AXLAIController_NoRegister()
	{
		return AXLAIController::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLAIController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AAIController();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLAIController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800280;

				OuterClass->LinkChild(Z_Construct_UFunction_AXLAIController_FindClosestEnemy());
				OuterClass->LinkChild(Z_Construct_UFunction_AXLAIController_FindClosestEnemyWithLOS());
				OuterClass->LinkChild(Z_Construct_UFunction_AXLAIController_ShootEnemy());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BehaviorComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BehaviorComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(BehaviorComp, AXLAIController), 0x0040000000082008, Z_Construct_UClass_UBehaviorTreeComponent_NoRegister());
				UProperty* NewProp_BlackboardComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlackboardComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(BlackboardComp, AXLAIController), 0x0040000000082008, Z_Construct_UClass_UBlackboardComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLAIController_FindClosestEnemy(), "FindClosestEnemy"); // 724081328
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLAIController_FindClosestEnemyWithLOS(), "FindClosestEnemyWithLOS"); // 646235851
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLAIController_ShootEnemy(), "ShootEnemy"); // 2857834671
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Controllers/XLAIController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Controllers/XLAIController.h"));
				MetaData->SetValue(NewProp_BehaviorComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_BehaviorComp, TEXT("ModuleRelativePath"), TEXT("Public/Controllers/XLAIController.h"));
				MetaData->SetValue(NewProp_BehaviorComp, TEXT("ToolTip"), TEXT("Cached BT component"));
				MetaData->SetValue(NewProp_BlackboardComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_BlackboardComp, TEXT("ModuleRelativePath"), TEXT("Public/Controllers/XLAIController.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLAIController(Z_Construct_UClass_AXLAIController, &AXLAIController::StaticClass, TEXT("AXLAIController"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLAIController);
	UEnum* Z_Construct_UEnum_ExtendedLibrary_EHealthState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EHealthState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EHealthState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_EHealthState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EHealthState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHealthState::Alive")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHealthState::Dying")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHealthState::Dead")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHealthState::EHealthState_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EHealthState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Character"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Enums/XLHealthState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EHealthState_CRC() { return 336115640U; }
	UEnum* Z_Construct_UEnum_ExtendedLibrary_ECombatState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_ECombatState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ECombatState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_ECombatState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECombatState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECombatState::Passive")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECombatState::Aggressive")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECombatState::ECombatState_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("ECombatState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Character"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Enums/XLCombatState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_ECombatState_CRC() { return 2348786571U; }
	UEnum* Z_Construct_UEnum_ExtendedLibrary_EMovementState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EMovementState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EMovementState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_EMovementState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMovementState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Idle")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Moving")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Sprinting")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Jumping")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Crouching")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Prone")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Dodging")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::Climbing")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EMovementState::EMovementState_MAX")), 8));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EMovementState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Character"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Enums/XLMovementState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EMovementState_CRC() { return 1125351979U; }
	UFunction* Z_Construct_UFunction_AXLCharacter_Die()
	{
		struct XLCharacter_eventDie_Parms
		{
			float KillingDamage;
			FDamageEvent DamageEvent;
			AController* Killer;
			AActor* DamageCauser;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AXLCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Die"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(XLCharacter_eventDie_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, XLCharacter_eventDie_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, XLCharacter_eventDie_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, XLCharacter_eventDie_Parms), sizeof(bool), true);
			UProperty* NewProp_DamageCauser = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DamageCauser"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DamageCauser, XLCharacter_eventDie_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_Killer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Killer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Killer, XLCharacter_eventDie_Parms), 0x0010000000000080, Z_Construct_UClass_AController_NoRegister());
			UProperty* NewProp_DamageEvent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(DamageEvent, XLCharacter_eventDie_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FDamageEvent());
			UProperty* NewProp_KillingDamage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KillingDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(KillingDamage, XLCharacter_eventDie_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Combat"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
			MetaData->SetValue(NewProp_DamageEvent, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXLCharacter_TakeDamage()
	{
		struct XLCharacter_eventTakeDamage_Parms
		{
			float Damage;
			FDamageEvent DamageEvent;
			AController* EventInstigator;
			AActor* DamageCauser;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AXLCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TakeDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(XLCharacter_eventTakeDamage_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, XLCharacter_eventTakeDamage_Parms), 0x0010000000000580);
			UProperty* NewProp_DamageCauser = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DamageCauser"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DamageCauser, XLCharacter_eventTakeDamage_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_EventInstigator = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EventInstigator"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(EventInstigator, XLCharacter_eventTakeDamage_Parms), 0x0010000000000080, Z_Construct_UClass_AController_NoRegister());
			UProperty* NewProp_DamageEvent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(DamageEvent, XLCharacter_eventTakeDamage_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FDamageEvent());
			UProperty* NewProp_Damage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Damage"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Damage, XLCharacter_eventTakeDamage_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Combat"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
			MetaData->SetValue(NewProp_DamageEvent, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AXLCharacter_NoRegister()
	{
		return AXLCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_AXLCharacter_Die());
				OuterClass->LinkChild(Z_Construct_UFunction_AXLCharacter_TakeDamage());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MovementComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MovementComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MovementComponent, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLMovementComponent_NoRegister());
				UProperty* NewProp_CoverComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CoverComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CoverComponent, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLCoverComponent_NoRegister());
				UProperty* NewProp_CharacterEffects = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterEffects"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterEffects, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLPlayerEffectManager_NoRegister());
				UProperty* NewProp_CharacterAnimations = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterAnimations"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterAnimations, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLPlayerAnimationManager_NoRegister());
				UProperty* NewProp_CharacterAbilities = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterAbilities"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterAbilities, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLAbilityManager_NoRegister());
				UProperty* NewProp_CharacterWeapons = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterWeapons"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterWeapons, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLWeaponManager_NoRegister());
				UProperty* NewProp_CharacterStats = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterStats"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterStats, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLCharacterStats_NoRegister());
				UProperty* NewProp_CharacterResources = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CharacterResources"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CharacterResources, AXLCharacter), 0x001000000008000d, Z_Construct_UClass_UXLCharacterResources_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLCharacter_Die(), "Die"); // 3833109386
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLCharacter_TakeDamage(), "TakeDamage"); // 180194685
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Characters/XLCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_MovementComponent, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_MovementComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MovementComponent, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CoverComponent, TEXT("Category"), TEXT("Cover"));
				MetaData->SetValue(NewProp_CoverComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CoverComponent, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterEffects, TEXT("Category"), TEXT("Effects"));
				MetaData->SetValue(NewProp_CharacterEffects, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterEffects, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterAnimations, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_CharacterAnimations, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterAnimations, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterAbilities, TEXT("Category"), TEXT("Abilities"));
				MetaData->SetValue(NewProp_CharacterAbilities, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterAbilities, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterWeapons, TEXT("Category"), TEXT("Weapons"));
				MetaData->SetValue(NewProp_CharacterWeapons, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterWeapons, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterStats, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_CharacterStats, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterStats, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
				MetaData->SetValue(NewProp_CharacterResources, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_CharacterResources, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CharacterResources, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLCharacter.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLCharacter(Z_Construct_UClass_AXLCharacter, &AXLCharacter::StaticClass, TEXT("AXLCharacter"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLCharacter);
	UClass* Z_Construct_UClass_AXLAI_NoRegister()
	{
		return AXLAI::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLAI()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AXLCharacter();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLAI::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BotBehavior = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BotBehavior"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(BotBehavior, AXLAI), 0x0010000000000001, Z_Construct_UClass_UBehaviorTree_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AI/XLAI.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/AI/XLAI.h"));
				MetaData->SetValue(NewProp_BotBehavior, TEXT("Category"), TEXT("Behavior"));
				MetaData->SetValue(NewProp_BotBehavior, TEXT("ModuleRelativePath"), TEXT("Public/AI/XLAI.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLAI(Z_Construct_UClass_AXLAI, &AXLAI::StaticClass, TEXT("AXLAI"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLAI);
	UClass* Z_Construct_UClass_AXLPlayerCharacter_NoRegister()
	{
		return AXLPlayerCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLPlayerCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AXLCharacter();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLPlayerCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Characters/XLPlayerCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Characters/XLPlayerCharacter.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLPlayerCharacter(Z_Construct_UClass_AXLPlayerCharacter, &AXLPlayerCharacter::StaticClass, TEXT("AXLPlayerCharacter"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLPlayerCharacter);
	UFunction* Z_Construct_UFunction_UXLCharacterResources_CooldownTimer()
	{
		struct XLCharacterResources_eventCooldownTimer_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CooldownTimer"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventCooldownTimer_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventCooldownTimer_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateEnergy()
	{
		struct XLCharacterResources_eventRegenerateEnergy_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegenerateEnergy"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventRegenerateEnergy_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventRegenerateEnergy_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateHealth()
	{
		struct XLCharacterResources_eventRegenerateHealth_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegenerateHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventRegenerateHealth_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventRegenerateHealth_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateShield()
	{
		struct XLCharacterResources_eventRegenerateShield_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegenerateShield"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventRegenerateShield_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventRegenerateShield_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLCharacterResources_RegenerateStamina()
	{
		struct XLCharacterResources_eventRegenerateStamina_Parms
		{
			float DeltaTime;
		};
		UObject* Outer=Z_Construct_UClass_UXLCharacterResources();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegenerateStamina"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLCharacterResources_eventRegenerateStamina_Parms));
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, XLCharacterResources_eventRegenerateStamina_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UXLCharacterResources_NoRegister()
	{
		return UXLCharacterResources::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLCharacterResources()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLCharacterResources::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_CooldownTimer());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_RegenerateEnergy());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_RegenerateHealth());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_RegenerateShield());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLCharacterResources_RegenerateStamina());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaxUltimate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxUltimate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxUltimate, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_ShieldRenerationCooldown = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ShieldRenerationCooldown"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ShieldRenerationCooldown, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_MaxShield = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxShield"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxShield, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_StaminaRenerationCooldown = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaminaRenerationCooldown"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StaminaRenerationCooldown, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_MaxStamina = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxStamina"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxStamina, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_EnergyRenerationCooldown = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnergyRenerationCooldown"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EnergyRenerationCooldown, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_MaxEnergy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxEnergy"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxEnergy, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_HealthRenerationCooldown = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HealthRenerationCooldown"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(HealthRenerationCooldown, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_CurrentHealth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CurrentHealth, UXLCharacterResources), 0x0010000000000005);
				UProperty* NewProp_MaxHealth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxHealth, UXLCharacterResources), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_CooldownTimer(), "CooldownTimer"); // 2812378412
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_RegenerateEnergy(), "RegenerateEnergy"); // 499213532
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_RegenerateHealth(), "RegenerateHealth"); // 1561968213
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_RegenerateShield(), "RegenerateShield"); // 2337256261
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLCharacterResources_RegenerateStamina(), "RegenerateStamina"); // 3833291807
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Data/XLCharacterResources.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxUltimate, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxUltimate, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxUltimate, TEXT("ToolTip"), TEXT("The amount of Ultimate the Pawn has"));
				MetaData->SetValue(NewProp_ShieldRenerationCooldown, TEXT("Category"), TEXT("Cooldowns"));
				MetaData->SetValue(NewProp_ShieldRenerationCooldown, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_ShieldRenerationCooldown, TEXT("ToolTip"), TEXT("The amount of time before Shield starts regenerating"));
				MetaData->SetValue(NewProp_MaxShield, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxShield, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxShield, TEXT("ToolTip"), TEXT("The amount of shield the Pawn has"));
				MetaData->SetValue(NewProp_StaminaRenerationCooldown, TEXT("Category"), TEXT("Cooldowns"));
				MetaData->SetValue(NewProp_StaminaRenerationCooldown, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_StaminaRenerationCooldown, TEXT("ToolTip"), TEXT("The amount of time before stamina starts regenerating"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("ToolTip"), TEXT("The amount of stamina the Pawn has"));
				MetaData->SetValue(NewProp_EnergyRenerationCooldown, TEXT("Category"), TEXT("Cooldowns"));
				MetaData->SetValue(NewProp_EnergyRenerationCooldown, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_EnergyRenerationCooldown, TEXT("ToolTip"), TEXT("The amount of time before energy starts regenerating"));
				MetaData->SetValue(NewProp_MaxEnergy, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxEnergy, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxEnergy, TEXT("ToolTip"), TEXT("The amount of energy the Pawn has"));
				MetaData->SetValue(NewProp_HealthRenerationCooldown, TEXT("Category"), TEXT("Cooldowns"));
				MetaData->SetValue(NewProp_HealthRenerationCooldown, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_HealthRenerationCooldown, TEXT("ToolTip"), TEXT("The amount of time before health starts regenerating"));
				MetaData->SetValue(NewProp_CurrentHealth, TEXT("Category"), TEXT("Cooldowns"));
				MetaData->SetValue(NewProp_CurrentHealth, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("Category"), TEXT("Resources"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterResources.h"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("ToolTip"), TEXT("The amount of health the Pawn has"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLCharacterResources(Z_Construct_UClass_UXLCharacterResources, &UXLCharacterResources::StaticClass, TEXT("UXLCharacterResources"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLCharacterResources);
	UClass* Z_Construct_UClass_UXLCharacterStats_NoRegister()
	{
		return UXLCharacterStats::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLCharacterStats()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLCharacterStats::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_EnergyDefense = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnergyDefense"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EnergyDefense, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_PhysicalDefense = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PhysicalDefense"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PhysicalDefense, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_AbilityPower = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AbilityPower"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AbilityPower, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_CooldownReduction = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CooldownReduction"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CooldownReduction, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_AttackPower = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AttackPower"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AttackPower, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_AttackSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AttackSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AttackSpeed, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_ShieldRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ShieldRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ShieldRegen, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_StaminaRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaminaRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StaminaRegen, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_EnergyRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnergyRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EnergyRegen, UXLCharacterStats), 0x0010000000000005);
				UProperty* NewProp_HealthRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HealthRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(HealthRegen, UXLCharacterStats), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Data/XLCharacterStats.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_EnergyDefense, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_EnergyDefense, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_EnergyDefense, TEXT("ToolTip"), TEXT("The precentage of damage reduced from energy attacks"));
				MetaData->SetValue(NewProp_PhysicalDefense, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_PhysicalDefense, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_PhysicalDefense, TEXT("ToolTip"), TEXT("The precentage of damage reduced from physical attacks"));
				MetaData->SetValue(NewProp_AbilityPower, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_AbilityPower, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_AbilityPower, TEXT("ToolTip"), TEXT("The precentage of damage all abilities are increased"));
				MetaData->SetValue(NewProp_CooldownReduction, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_CooldownReduction, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_CooldownReduction, TEXT("ToolTip"), TEXT("The percentage of time all ability cooldowns are reduced"));
				MetaData->SetValue(NewProp_AttackPower, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_AttackPower, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_AttackPower, TEXT("ToolTip"), TEXT("The amount of damage a basic attack deals"));
				MetaData->SetValue(NewProp_AttackSpeed, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_AttackSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_AttackSpeed, TEXT("ToolTip"), TEXT("The time between consecutive attacks"));
				MetaData->SetValue(NewProp_ShieldRegen, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_ShieldRegen, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_ShieldRegen, TEXT("ToolTip"), TEXT("The amount of stamina restored per second"));
				MetaData->SetValue(NewProp_StaminaRegen, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_StaminaRegen, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_StaminaRegen, TEXT("ToolTip"), TEXT("The amount of stamina restored per second"));
				MetaData->SetValue(NewProp_EnergyRegen, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_EnergyRegen, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_EnergyRegen, TEXT("ToolTip"), TEXT("The amount of energy restored per second"));
				MetaData->SetValue(NewProp_HealthRegen, TEXT("Category"), TEXT("Stats"));
				MetaData->SetValue(NewProp_HealthRegen, TEXT("ModuleRelativePath"), TEXT("Public/Data/XLCharacterStats.h"));
				MetaData->SetValue(NewProp_HealthRegen, TEXT("ToolTip"), TEXT("The amount of health restored per second"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLCharacterStats(Z_Construct_UClass_UXLCharacterStats, &UXLCharacterStats::StaticClass, TEXT("UXLCharacterStats"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLCharacterStats);
	UClass* Z_Construct_UClass_UXLCoverComponent_NoRegister()
	{
		return UXLCoverComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLCoverComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLCoverComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Components/XLCoverComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLCoverComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLCoverComponent(Z_Construct_UClass_UXLCoverComponent, &UXLCoverComponent::StaticClass, TEXT("UXLCoverComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLCoverComponent);
	UClass* Z_Construct_UClass_UXLFindPointNearEnemy_NoRegister()
	{
		return UXLFindPointNearEnemy::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLFindPointNearEnemy()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTask_BlackboardBase();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLFindPointNearEnemy::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tasks/XLFindPointNearEnemy.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tasks/XLFindPointNearEnemy.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLFindPointNearEnemy(Z_Construct_UClass_UXLFindPointNearEnemy, &UXLFindPointNearEnemy::StaticClass, TEXT("UXLFindPointNearEnemy"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLFindPointNearEnemy);
	UFunction* Z_Construct_UFunction_UXLGameInstance_BeginHostingQuickMatch()
	{
		UObject* Outer=Z_Construct_UClass_UXLGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BeginHostingQuickMatch"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameInstance.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Begin a hosted quick match"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLGameInstance_FindSessions()
	{
		struct XLGameInstance_eventFindSessions_Parms
		{
			ULocalPlayer* PlayerOwner;
			bool bLANMatch;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UXLGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FindSessions"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLGameInstance_eventFindSessions_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, XLGameInstance_eventFindSessions_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, XLGameInstance_eventFindSessions_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, XLGameInstance_eventFindSessions_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLANMatch, XLGameInstance_eventFindSessions_Parms, bool);
			UProperty* NewProp_bLANMatch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bLANMatch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLANMatch, XLGameInstance_eventFindSessions_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bLANMatch, XLGameInstance_eventFindSessions_Parms), sizeof(bool), true);
			UProperty* NewProp_PlayerOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PlayerOwner, XLGameInstance_eventFindSessions_Parms), 0x0010000000000080, Z_Construct_UClass_ULocalPlayer_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameInstance.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Initiates the session searching"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLGameInstance_GetSessionID()
	{
		struct XLGameInstance_eventGetSessionID_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UXLGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetSessionID"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLGameInstance_eventGetSessionID_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, XLGameInstance_eventGetSessionID_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Menu"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameInstance.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLGameInstance_HostGame()
	{
		struct XLGameInstance_eventHostGame_Parms
		{
			ULocalPlayer* LocalPlayer;
			FString GameType;
			FString InTravelURL;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UXLGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HostGame"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLGameInstance_eventHostGame_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, XLGameInstance_eventHostGame_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, XLGameInstance_eventHostGame_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, XLGameInstance_eventHostGame_Parms), sizeof(bool), true);
			UProperty* NewProp_InTravelURL = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InTravelURL"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(InTravelURL, XLGameInstance_eventHostGame_Parms), 0x0010000000000080);
			UProperty* NewProp_GameType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GameType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(GameType, XLGameInstance_eventHostGame_Parms), 0x0010000000000080);
			UProperty* NewProp_LocalPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocalPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(LocalPlayer, XLGameInstance_eventHostGame_Parms), 0x0010000000000080, Z_Construct_UClass_ULocalPlayer_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameInstance.h"));
			MetaData->SetValue(NewProp_InTravelURL, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_GameType, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UXLGameInstance_SetSessionID()
	{
		struct XLGameInstance_eventSetSessionID_Parms
		{
			FString NewSessionID;
		};
		UObject* Outer=Z_Construct_UClass_UXLGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSessionID"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XLGameInstance_eventSetSessionID_Parms));
			UProperty* NewProp_NewSessionID = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewSessionID"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(NewSessionID, XLGameInstance_eventSetSessionID_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Menu"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameInstance.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UXLGameInstance_NoRegister()
	{
		return UXLGameInstance::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLGameInstance()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGameInstance();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLGameInstance::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2000008C;

				OuterClass->LinkChild(Z_Construct_UFunction_UXLGameInstance_BeginHostingQuickMatch());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLGameInstance_FindSessions());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLGameInstance_GetSessionID());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLGameInstance_HostGame());
				OuterClass->LinkChild(Z_Construct_UFunction_UXLGameInstance_SetSessionID());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SessionID = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SessionID"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SessionID, UXLGameInstance), 0x0040000000000000);
				UProperty* NewProp_MainMenuMap = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MainMenuMap"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MainMenuMap, UXLGameInstance), 0x0040000000004000);
				UProperty* NewProp_WelcomeScreenMap = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WelcomeScreenMap"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(WelcomeScreenMap, UXLGameInstance), 0x0040000000004000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLGameInstance_BeginHostingQuickMatch(), "BeginHostingQuickMatch"); // 1651261303
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLGameInstance_FindSessions(), "FindSessions"); // 4087538742
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLGameInstance_GetSessionID(), "GetSessionID"); // 88097865
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLGameInstance_HostGame(), "HostGame"); // 4289314202
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UXLGameInstance_SetSessionID(), "SetSessionID"); // 394810768
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Game/XLGameInstance.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameInstance.h"));
				MetaData->SetValue(NewProp_SessionID, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameInstance.h"));
				MetaData->SetValue(NewProp_MainMenuMap, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameInstance.h"));
				MetaData->SetValue(NewProp_WelcomeScreenMap, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameInstance.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLGameInstance(Z_Construct_UClass_UXLGameInstance, &UXLGameInstance::StaticClass, TEXT("UXLGameInstance"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLGameInstance);
	UFunction* Z_Construct_UFunction_AXLGameMode_CheckTeamElimination()
	{
		UObject* Outer=Z_Construct_UClass_AXLGameMode();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CheckTeamElimination"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Match"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("check who won"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXLGameMode_FinishMatch()
	{
		UObject* Outer=Z_Construct_UClass_AXLGameMode();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FinishMatch"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020601, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("finish current match and lock players"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXLGameMode_SetAllowBots()
	{
		struct XLGameMode_eventSetAllowBots_Parms
		{
			bool bInAllowBots;
			int32 InMaxBots;
		};
		UObject* Outer=Z_Construct_UClass_AXLGameMode();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetAllowBots"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020601, 65535, sizeof(XLGameMode_eventSetAllowBots_Parms));
			UProperty* NewProp_InMaxBots = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InMaxBots"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(InMaxBots, XLGameMode_eventSetAllowBots_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInAllowBots, XLGameMode_eventSetAllowBots_Parms, bool);
			UProperty* NewProp_bInAllowBots = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bInAllowBots"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInAllowBots, XLGameMode_eventSetAllowBots_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bInAllowBots, XLGameMode_eventSetAllowBots_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_InMaxBots"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AXLGameMode_NoRegister()
	{
		return AXLGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLGameMode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2080028C;

				OuterClass->LinkChild(Z_Construct_UFunction_AXLGameMode_CheckTeamElimination());
				OuterClass->LinkChild(Z_Construct_UFunction_AXLGameMode_FinishMatch());
				OuterClass->LinkChild(Z_Construct_UFunction_AXLGameMode_SetAllowBots());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaxBots = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxBots"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxBots, AXLGameMode), 0x0020080000004000);
				UProperty* NewProp_DamageSelfScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DamageSelfScale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DamageSelfScale, AXLGameMode), 0x0020080000004000);
				UProperty* NewProp_DeathScore = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DeathScore"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(DeathScore, AXLGameMode), 0x0020080000004000);
				UProperty* NewProp_KillScore = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("KillScore"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(KillScore, AXLGameMode), 0x0020080000004000);
				UProperty* NewProp_TimeBetweenMatches = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TimeBetweenMatches"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(TimeBetweenMatches, AXLGameMode), 0x0020080000004000);
				UProperty* NewProp_RoundKillLimit = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RoundKillLimit"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RoundKillLimit, AXLGameMode), 0x0020080000004000);
				UProperty* NewProp_RoundTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RoundTime"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RoundTime, AXLGameMode), 0x0020080000004000);
				UProperty* NewProp_WarmupTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WarmupTime"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(WarmupTime, AXLGameMode), 0x0020080000004000);
				UProperty* NewProp_BotPawnClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BotPawnClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(BotPawnClass, AXLGameMode), 0x0014000000000005, Z_Construct_UClass_APawn_NoRegister(), UClass::StaticClass());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLGameMode_CheckTeamElimination(), "CheckTeamElimination"); // 1568076042
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLGameMode_FinishMatch(), "FinishMatch"); // 3271917754
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLGameMode_SetAllowBots(), "SetAllowBots"); // 3847100944
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Game/XLGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_MaxBots, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
				MetaData->SetValue(NewProp_DamageSelfScale, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
				MetaData->SetValue(NewProp_DamageSelfScale, TEXT("ToolTip"), TEXT("scale for self instigated damage"));
				MetaData->SetValue(NewProp_DeathScore, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
				MetaData->SetValue(NewProp_DeathScore, TEXT("ToolTip"), TEXT("score for death"));
				MetaData->SetValue(NewProp_KillScore, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
				MetaData->SetValue(NewProp_KillScore, TEXT("ToolTip"), TEXT("score for kill"));
				MetaData->SetValue(NewProp_TimeBetweenMatches, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
				MetaData->SetValue(NewProp_RoundKillLimit, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
				MetaData->SetValue(NewProp_RoundKillLimit, TEXT("ToolTip"), TEXT("match kills to win"));
				MetaData->SetValue(NewProp_RoundTime, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
				MetaData->SetValue(NewProp_RoundTime, TEXT("ToolTip"), TEXT("match duration"));
				MetaData->SetValue(NewProp_WarmupTime, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
				MetaData->SetValue(NewProp_WarmupTime, TEXT("ToolTip"), TEXT("delay between first player login and starting match"));
				MetaData->SetValue(NewProp_BotPawnClass, TEXT("Category"), TEXT("GameMode"));
				MetaData->SetValue(NewProp_BotPawnClass, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameMode.h"));
				MetaData->SetValue(NewProp_BotPawnClass, TEXT("ToolTip"), TEXT("The bot pawn class"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLGameMode(Z_Construct_UClass_AXLGameMode, &AXLGameMode::StaticClass, TEXT("AXLGameMode"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLGameMode);
	UClass* Z_Construct_UClass_AXLGameSession_NoRegister()
	{
		return AXLGameSession::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLGameSession()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameSession();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLGameSession::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800284;


				OuterClass->ClassConfigName = FName(TEXT("game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Game/XLGameSession.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Game/XLGameSession.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLGameSession(Z_Construct_UClass_AXLGameSession, &AXLGameSession::StaticClass, TEXT("AXLGameSession"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLGameSession);
	UClass* Z_Construct_UClass_AXLGameState_NoRegister()
	{
		return AXLGameState::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLGameState()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameState();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLGameState::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800280;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bTimerPaused, AXLGameState, bool);
				UProperty* NewProp_bTimerPaused = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bTimerPaused"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bTimerPaused, AXLGameState), 0x0010000000002000, CPP_BOOL_PROPERTY_BITMASK(bTimerPaused, AXLGameState), sizeof(bool), true);
				UProperty* NewProp_RemainingTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RemainingTime"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RemainingTime, AXLGameState), 0x0010000000002000);
				UProperty* NewProp_TeamScores = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TeamScores"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(TeamScores, AXLGameState), 0x0010000000002000);
				UProperty* NewProp_TeamScores_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TeamScores, TEXT("TeamScores"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_NumTeams = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumTeams"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NumTeams, AXLGameState), 0x0010000000002000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("States/XLGameState.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/States/XLGameState.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_bTimerPaused, TEXT("ModuleRelativePath"), TEXT("Public/States/XLGameState.h"));
				MetaData->SetValue(NewProp_RemainingTime, TEXT("ModuleRelativePath"), TEXT("Public/States/XLGameState.h"));
				MetaData->SetValue(NewProp_TeamScores, TEXT("ModuleRelativePath"), TEXT("Public/States/XLGameState.h"));
				MetaData->SetValue(NewProp_NumTeams, TEXT("ModuleRelativePath"), TEXT("Public/States/XLGameState.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLGameState(Z_Construct_UClass_AXLGameState, &AXLGameState::StaticClass, TEXT("AXLGameState"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLGameState);
	UClass* Z_Construct_UClass_UXLHasLineOfSightTo_NoRegister()
	{
		return UXLHasLineOfSightTo::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLHasLineOfSightTo()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLHasLineOfSightTo::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_EnemyKey = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnemyKey"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(EnemyKey, UXLHasLineOfSightTo), 0x0020080000000001, Z_Construct_UScriptStruct_FBlackboardKeySelector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tasks/XLHasLineOfSightTo.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Tasks/XLHasLineOfSightTo.h"));
				MetaData->SetValue(NewProp_EnemyKey, TEXT("Category"), TEXT("Condition"));
				MetaData->SetValue(NewProp_EnemyKey, TEXT("ModuleRelativePath"), TEXT("Public/Tasks/XLHasLineOfSightTo.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLHasLineOfSightTo(Z_Construct_UClass_UXLHasLineOfSightTo, &UXLHasLineOfSightTo::StaticClass, TEXT("UXLHasLineOfSightTo"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLHasLineOfSightTo);
	UScriptStruct* Z_Construct_UScriptStruct_FDecalData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UScriptStruct_FDecalData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("DecalData"), sizeof(FDecalData), Get_Z_Construct_UScriptStruct_FDecalData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DecalData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FDecalData>, EStructFlags(0x00000001));
			UProperty* NewProp_LifeSpan = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LifeSpan"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(LifeSpan, FDecalData), 0x0010000000010001);
			UProperty* NewProp_DecalSize = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DecalSize"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DecalSize, FDecalData), 0x0010000000010001);
			UProperty* NewProp_DecalMaterial = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DecalMaterial"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DecalMaterial, FDecalData), 0x0010000000010001, Z_Construct_UClass_UMaterial_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLDecalData.h"));
			MetaData->SetValue(NewProp_LifeSpan, TEXT("Category"), TEXT("Decal"));
			MetaData->SetValue(NewProp_LifeSpan, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLDecalData.h"));
			MetaData->SetValue(NewProp_LifeSpan, TEXT("ToolTip"), TEXT("lifespan"));
			MetaData->SetValue(NewProp_DecalSize, TEXT("Category"), TEXT("Decal"));
			MetaData->SetValue(NewProp_DecalSize, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLDecalData.h"));
			MetaData->SetValue(NewProp_DecalSize, TEXT("ToolTip"), TEXT("quad size (width & height)"));
			MetaData->SetValue(NewProp_DecalMaterial, TEXT("Category"), TEXT("Decal"));
			MetaData->SetValue(NewProp_DecalMaterial, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLDecalData.h"));
			MetaData->SetValue(NewProp_DecalMaterial, TEXT("ToolTip"), TEXT("material"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FDecalData_CRC() { return 2552104729U; }
	UClass* Z_Construct_UClass_AXLImpactEffect_NoRegister()
	{
		return AXLImpactEffect::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLImpactEffect()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLImpactEffect::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SurfaceHit = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SurfaceHit"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SurfaceHit, AXLImpactEffect), 0x0010008000000014, Z_Construct_UScriptStruct_FHitResult());
				UProperty* NewProp_DefaultDecal = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultDecal"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(DefaultDecal, AXLImpactEffect), 0x0010000000010001, Z_Construct_UScriptStruct_FDecalData());
				UProperty* NewProp_EnergySound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnergySound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(EnergySound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_FleshSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FleshSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FleshSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_GrassSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GrassSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(GrassSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_GlassSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GlassSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(GlassSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_WoodSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WoodSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WoodSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_MetalSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MetalSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MetalSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_WaterSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WaterSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WaterSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_DirtSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DirtSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DirtSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_ConcreteSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConcreteSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ConcreteSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_DefaultSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DefaultSound, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_EnergyFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnergyFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(EnergyFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_FleshFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FleshFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FleshFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_GrassFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GrassFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(GrassFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_GlassFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GlassFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(GlassFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_WoodFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WoodFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WoodFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_MetalFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MetalFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MetalFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_WaterFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WaterFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WaterFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_DirtFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DirtFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DirtFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_ConcreteFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ConcreteFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ConcreteFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_DefaultFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DefaultFX, AXLImpactEffect), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_ImpactLightFadeOut = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ImpactLightFadeOut"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ImpactLightFadeOut, AXLImpactEffect), 0x0010000000010001);
				UProperty* NewProp_ImpactLight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ImpactLight"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ImpactLight, AXLImpactEffect), 0x00100000000b0009, Z_Construct_UClass_UPointLightComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Effects/XLImpactEffect.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_SurfaceHit, TEXT("Category"), TEXT("Surface"));
				MetaData->SetValue(NewProp_SurfaceHit, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_SurfaceHit, TEXT("ToolTip"), TEXT("surface data for spawning"));
				MetaData->SetValue(NewProp_DefaultDecal, TEXT("Category"), TEXT("Defaults"));
				MetaData->SetValue(NewProp_DefaultDecal, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_DefaultDecal, TEXT("ToolTip"), TEXT("default decal when material specific override doesn't exist"));
				MetaData->SetValue(NewProp_EnergySound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_EnergySound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_FleshSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_FleshSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_FleshSound, TEXT("ToolTip"), TEXT("impact FX on flesh"));
				MetaData->SetValue(NewProp_GrassSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_GrassSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_GrassSound, TEXT("ToolTip"), TEXT("impact FX on grass"));
				MetaData->SetValue(NewProp_GlassSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_GlassSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_GlassSound, TEXT("ToolTip"), TEXT("impact FX on glass"));
				MetaData->SetValue(NewProp_WoodSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_WoodSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_WoodSound, TEXT("ToolTip"), TEXT("impact FX on wood"));
				MetaData->SetValue(NewProp_MetalSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_MetalSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_MetalSound, TEXT("ToolTip"), TEXT("impact FX on metal"));
				MetaData->SetValue(NewProp_WaterSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_WaterSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_WaterSound, TEXT("ToolTip"), TEXT("impact FX on water"));
				MetaData->SetValue(NewProp_DirtSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_DirtSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_DirtSound, TEXT("ToolTip"), TEXT("impact FX on dirt"));
				MetaData->SetValue(NewProp_ConcreteSound, TEXT("Category"), TEXT("Sound"));
				MetaData->SetValue(NewProp_ConcreteSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_ConcreteSound, TEXT("ToolTip"), TEXT("impact FX on concrete"));
				MetaData->SetValue(NewProp_DefaultSound, TEXT("Category"), TEXT("Defaults"));
				MetaData->SetValue(NewProp_DefaultSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_DefaultSound, TEXT("ToolTip"), TEXT("default impact sound used when material specific override doesn't exist"));
				MetaData->SetValue(NewProp_EnergyFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_EnergyFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_FleshFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_FleshFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_FleshFX, TEXT("ToolTip"), TEXT("impact FX on flesh"));
				MetaData->SetValue(NewProp_GrassFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_GrassFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_GrassFX, TEXT("ToolTip"), TEXT("impact FX on grass"));
				MetaData->SetValue(NewProp_GlassFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_GlassFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_GlassFX, TEXT("ToolTip"), TEXT("impact FX on glass"));
				MetaData->SetValue(NewProp_WoodFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_WoodFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_WoodFX, TEXT("ToolTip"), TEXT("impact FX on wood"));
				MetaData->SetValue(NewProp_MetalFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_MetalFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_MetalFX, TEXT("ToolTip"), TEXT("impact FX on metal"));
				MetaData->SetValue(NewProp_WaterFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_WaterFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_WaterFX, TEXT("ToolTip"), TEXT("impact FX on water"));
				MetaData->SetValue(NewProp_DirtFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_DirtFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_DirtFX, TEXT("ToolTip"), TEXT("impact FX on dirt"));
				MetaData->SetValue(NewProp_ConcreteFX, TEXT("Category"), TEXT("Visual"));
				MetaData->SetValue(NewProp_ConcreteFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_ConcreteFX, TEXT("ToolTip"), TEXT("impact FX on concrete"));
				MetaData->SetValue(NewProp_DefaultFX, TEXT("Category"), TEXT("Defaults"));
				MetaData->SetValue(NewProp_DefaultFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_DefaultFX, TEXT("ToolTip"), TEXT("default impact FX used when material specific override doesn't exist"));
				MetaData->SetValue(NewProp_ImpactLightFadeOut, TEXT("Category"), TEXT("Effect"));
				MetaData->SetValue(NewProp_ImpactLightFadeOut, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_ImpactLightFadeOut, TEXT("ToolTip"), TEXT("how long keep explosion light on?"));
				MetaData->SetValue(NewProp_ImpactLight, TEXT("Category"), TEXT("Effect"));
				MetaData->SetValue(NewProp_ImpactLight, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ImpactLight, TEXT("ModuleRelativePath"), TEXT("Public/Effects/XLImpactEffect.h"));
				MetaData->SetValue(NewProp_ImpactLight, TEXT("ToolTip"), TEXT("explosion light"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLImpactEffect(Z_Construct_UClass_AXLImpactEffect, &AXLImpactEffect::StaticClass, TEXT("AXLImpactEffect"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLImpactEffect);
	UClass* Z_Construct_UClass_UXLMovementComponent_NoRegister()
	{
		return UXLMovementComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLMovementComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCharacterMovementComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLMovementComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TargetingMovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetingMovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TargetingMovementSpeed, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_CrouchedMovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CrouchedMovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CrouchedMovementSpeed, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_RunningMovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RunningMovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(RunningMovementSpeed, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_BaseMovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseMovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseMovementSpeed, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_MovementSpeedModifier = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MovementSpeedModifier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MovementSpeedModifier, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_BaseLookUpRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseLookUpRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseLookUpRate, UXLMovementComponent), 0x0010000000000000);
				UProperty* NewProp_BaseTurnRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseTurnRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseTurnRate, UXLMovementComponent), 0x0010000000000000);
				UProperty* NewProp_DodgeCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DodgeCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DodgeCost, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_ClimbCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClimbCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ClimbCost, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_VaultCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VaultCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(VaultCost, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_JumpCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("JumpCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(JumpCost, UXLMovementComponent), 0x0010000000010001);
				UProperty* NewProp_SprintCost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SprintCost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SprintCost, UXLMovementComponent), 0x0010000000010001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Components/XLMovementComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_TargetingMovementSpeed, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_TargetingMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_CrouchedMovementSpeed, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_CrouchedMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_RunningMovementSpeed, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_RunningMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_BaseMovementSpeed, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_BaseMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_MovementSpeedModifier, TEXT("Category"), TEXT("Movement"));
				MetaData->SetValue(NewProp_MovementSpeedModifier, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_MovementSpeedModifier, TEXT("ToolTip"), TEXT("Movement Speed"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_DodgeCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_DodgeCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_ClimbCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_ClimbCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_VaultCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_VaultCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_JumpCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_JumpCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
				MetaData->SetValue(NewProp_SprintCost, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_SprintCost, TEXT("ModuleRelativePath"), TEXT("Public/Components/XLMovementComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLMovementComponent(Z_Construct_UClass_UXLMovementComponent, &UXLMovementComponent::StaticClass, TEXT("UXLMovementComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLMovementComponent);
	UClass* Z_Construct_UClass_UXLPlayerAnimationManager_NoRegister()
	{
		return UXLPlayerAnimationManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLPlayerAnimationManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLPlayerAnimationManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DeathAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DeathAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DeathAnim, UXLPlayerAnimationManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLPlayerAnimationManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPlayerAnimationManager.h"));
				MetaData->SetValue(NewProp_DeathAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_DeathAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPlayerAnimationManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLPlayerAnimationManager(Z_Construct_UClass_UXLPlayerAnimationManager, &UXLPlayerAnimationManager::StaticClass, TEXT("UXLPlayerAnimationManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLPlayerAnimationManager);
	UFunction* Z_Construct_UFunction_AXLPlayerController_ClientGameStarted()
	{
		UObject* Outer=Z_Construct_UClass_AXLPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClientGameStarted"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Controllers/XLPlayerController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXLPlayerController_ClientStartOnlineGame()
	{
		UObject* Outer=Z_Construct_UClass_AXLPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClientStartOnlineGame"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Controllers/XLPlayerController.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AXLPlayerController_NoRegister()
	{
		return AXLPlayerController::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLPlayerController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerController();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLPlayerController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800284;

				OuterClass->LinkChild(Z_Construct_UFunction_AXLPlayerController_ClientGameStarted());
				OuterClass->LinkChild(Z_Construct_UFunction_AXLPlayerController_ClientStartOnlineGame());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MyCharacter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MyCharacter"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MyCharacter, AXLPlayerController), 0x0040000000000000, Z_Construct_UClass_AXLCharacter_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLPlayerController_ClientGameStarted(), "ClientGameStarted"); // 2164594727
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLPlayerController_ClientStartOnlineGame(), "ClientStartOnlineGame"); // 275249496
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Controllers/XLPlayerController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Controllers/XLPlayerController.h"));
				MetaData->SetValue(NewProp_MyCharacter, TEXT("ModuleRelativePath"), TEXT("Public/Controllers/XLPlayerController.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLPlayerController(Z_Construct_UClass_AXLPlayerController, &AXLPlayerController::StaticClass, TEXT("AXLPlayerController"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLPlayerController);
	UClass* Z_Construct_UClass_UXLPlayerEffectManager_NoRegister()
	{
		return UXLPlayerEffectManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLPlayerEffectManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLPlayerEffectManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLPlayerEffectManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPlayerEffectManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLPlayerEffectManager(Z_Construct_UClass_UXLPlayerEffectManager, &UXLPlayerEffectManager::StaticClass, TEXT("UXLPlayerEffectManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLPlayerEffectManager);
	UClass* Z_Construct_UClass_UXLPlayerSoundManager_NoRegister()
	{
		return UXLPlayerSoundManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLPlayerSoundManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLPlayerSoundManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLPlayerSoundManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLPlayerSoundManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLPlayerSoundManager(Z_Construct_UClass_UXLPlayerSoundManager, &UXLPlayerSoundManager::StaticClass, TEXT("UXLPlayerSoundManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLPlayerSoundManager);
	UEnum* Z_Construct_UEnum_ExtendedLibrary_EWinningState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EWinningState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EWinningState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_EWinningState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EWinningState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWinningState::Winner")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWinningState::Loser")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWinningState::Playing")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWinningState::EWinningState_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EWinningState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Character"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/States/XLPlayerState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EWinningState_CRC() { return 2995193337U; }
	UFunction* Z_Construct_UFunction_AXLPlayerState_BroadcastDeath()
	{
		struct XLPlayerState_eventBroadcastDeath_Parms
		{
			AXLPlayerState* KillerPlayerState;
			const UDamageType* KillerDamageType;
			AXLPlayerState* KilledPlayerState;
		};
		UObject* Outer=Z_Construct_UClass_AXLPlayerState();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BroadcastDeath"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(XLPlayerState_eventBroadcastDeath_Parms));
			UProperty* NewProp_KilledPlayerState = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KilledPlayerState"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(KilledPlayerState, XLPlayerState_eventBroadcastDeath_Parms), 0x0010000000000080, Z_Construct_UClass_AXLPlayerState_NoRegister());
			UProperty* NewProp_KillerDamageType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KillerDamageType"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(KillerDamageType, XLPlayerState_eventBroadcastDeath_Parms), 0x0010000000000082, Z_Construct_UClass_UDamageType_NoRegister());
			UProperty* NewProp_KillerPlayerState = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KillerPlayerState"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(KillerPlayerState, XLPlayerState_eventBroadcastDeath_Parms), 0x0010000000000080, Z_Construct_UClass_AXLPlayerState_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/States/XLPlayerState.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("broadcast death to local clients"));
			MetaData->SetValue(NewProp_KillerDamageType, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXLPlayerState_InformAboutKill()
	{
		struct XLPlayerState_eventInformAboutKill_Parms
		{
			AXLPlayerState* KillerPlayerState;
			const UDamageType* KillerDamageType;
			AXLPlayerState* KilledPlayerState;
		};
		UObject* Outer=Z_Construct_UClass_AXLPlayerState();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("InformAboutKill"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(XLPlayerState_eventInformAboutKill_Parms));
			UProperty* NewProp_KilledPlayerState = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KilledPlayerState"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(KilledPlayerState, XLPlayerState_eventInformAboutKill_Parms), 0x0010000000000080, Z_Construct_UClass_AXLPlayerState_NoRegister());
			UProperty* NewProp_KillerDamageType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KillerDamageType"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(KillerDamageType, XLPlayerState_eventInformAboutKill_Parms), 0x0010000000000082, Z_Construct_UClass_UDamageType_NoRegister());
			UProperty* NewProp_KillerPlayerState = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KillerPlayerState"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(KillerPlayerState, XLPlayerState_eventInformAboutKill_Parms), 0x0010000000000080, Z_Construct_UClass_AXLPlayerState_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/States/XLPlayerState.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sends kill (excluding self) to clients"));
			MetaData->SetValue(NewProp_KillerDamageType, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AXLPlayerState_NoRegister()
	{
		return AXLPlayerState::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLPlayerState()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerState();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLPlayerState::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800280;

				OuterClass->LinkChild(Z_Construct_UFunction_AXLPlayerState_BroadcastDeath());
				OuterClass->LinkChild(Z_Construct_UFunction_AXLPlayerState_InformAboutKill());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_NumRocketsFired = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumRocketsFired"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NumRocketsFired, AXLPlayerState), 0x0020080000000000);
				UProperty* NewProp_NumBulletsFired = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumBulletsFired"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NumBulletsFired, AXLPlayerState), 0x0020080000000000);
				UProperty* NewProp_NumDeaths = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumDeaths"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NumDeaths, AXLPlayerState), 0x0020080000000000);
				UProperty* NewProp_NumKills = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumKills"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NumKills, AXLPlayerState), 0x0020080000000000);
				UProperty* NewProp_TeamNumber = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TeamNumber"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(TeamNumber, AXLPlayerState), 0x0020080000000000);
				UProperty* NewProp_WinningState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WinningState"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(WinningState, AXLPlayerState), 0x0010000000000005, Z_Construct_UEnum_ExtendedLibrary_EWinningState());
				UProperty* NewProp_CandyCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CandyCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(CandyCount, AXLPlayerState), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLPlayerState_BroadcastDeath(), "BroadcastDeath"); // 2875550207
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXLPlayerState_InformAboutKill(), "InformAboutKill"); // 2784177480
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("States/XLPlayerState.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/States/XLPlayerState.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_NumRocketsFired, TEXT("ModuleRelativePath"), TEXT("Public/States/XLPlayerState.h"));
				MetaData->SetValue(NewProp_NumRocketsFired, TEXT("ToolTip"), TEXT("number of rockets fired this match"));
				MetaData->SetValue(NewProp_NumBulletsFired, TEXT("ModuleRelativePath"), TEXT("Public/States/XLPlayerState.h"));
				MetaData->SetValue(NewProp_NumBulletsFired, TEXT("ToolTip"), TEXT("number of bullets fired this match"));
				MetaData->SetValue(NewProp_NumDeaths, TEXT("ModuleRelativePath"), TEXT("Public/States/XLPlayerState.h"));
				MetaData->SetValue(NewProp_NumDeaths, TEXT("ToolTip"), TEXT("number of deaths"));
				MetaData->SetValue(NewProp_NumKills, TEXT("ModuleRelativePath"), TEXT("Public/States/XLPlayerState.h"));
				MetaData->SetValue(NewProp_NumKills, TEXT("ToolTip"), TEXT("number of kills"));
				MetaData->SetValue(NewProp_TeamNumber, TEXT("ModuleRelativePath"), TEXT("Public/States/XLPlayerState.h"));
				MetaData->SetValue(NewProp_TeamNumber, TEXT("ToolTip"), TEXT("team number"));
				MetaData->SetValue(NewProp_WinningState, TEXT("Category"), TEXT("Winning"));
				MetaData->SetValue(NewProp_WinningState, TEXT("ModuleRelativePath"), TEXT("Public/States/XLPlayerState.h"));
				MetaData->SetValue(NewProp_CandyCount, TEXT("Category"), TEXT("Candy"));
				MetaData->SetValue(NewProp_CandyCount, TEXT("ModuleRelativePath"), TEXT("Public/States/XLPlayerState.h"));
				MetaData->SetValue(NewProp_CandyCount, TEXT("ToolTip"), TEXT("number of candies"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLPlayerState(Z_Construct_UClass_AXLPlayerState, &AXLPlayerState::StaticClass, TEXT("AXLPlayerState"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLPlayerState);
	UClass* Z_Construct_UClass_AXLProjectile_NoRegister()
	{
		return AXLProjectile::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLProjectile()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLProjectile::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Projectiles/XLProjectile.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Projectiles/XLProjectile.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLProjectile(Z_Construct_UClass_AXLProjectile, &AXLProjectile::StaticClass, TEXT("AXLProjectile"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLProjectile);
	UEnum* Z_Construct_UEnum_ExtendedLibrary_EWeaponState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EWeaponState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EWeaponState"), 0, Get_Z_Construct_UEnum_ExtendedLibrary_EWeaponState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EWeaponState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWeaponState::Idle")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWeaponState::Firing")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWeaponState::Reloading")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWeaponState::Meleeing")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EWeaponState::EWeaponState_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EWeaponState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Weapon"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Enums/XLWeaponState.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ExtendedLibrary_EWeaponState_CRC() { return 2239057730U; }
	UClass* Z_Construct_UClass_AXLWeapon_NoRegister()
	{
		return AXLWeapon::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLWeapon()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLWeapon::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_WeaponEffects = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WeaponEffects"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WeaponEffects, AXLWeapon), 0x001000000008000d, Z_Construct_UClass_UXLWeaponEffectManager_NoRegister());
				UProperty* NewProp_WeaponAnimations = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WeaponAnimations"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WeaponAnimations, AXLWeapon), 0x001000000008000d, Z_Construct_UClass_UXLWeaponAnimationManager_NoRegister());
				UProperty* NewProp_Mesh3P = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Mesh3P"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Mesh3P, AXLWeapon), 0x0010000000090009, Z_Construct_UClass_USkeletalMeshComponent_NoRegister());
				UProperty* NewProp_Character = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Character"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Character, AXLWeapon), 0x0010000000000000, Z_Construct_UClass_AXLCharacter_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/XLWeapon.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLWeapon.h"));
				MetaData->SetValue(NewProp_WeaponEffects, TEXT("Category"), TEXT("Animations"));
				MetaData->SetValue(NewProp_WeaponEffects, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_WeaponEffects, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLWeapon.h"));
				MetaData->SetValue(NewProp_WeaponAnimations, TEXT("Category"), TEXT("Animations"));
				MetaData->SetValue(NewProp_WeaponAnimations, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_WeaponAnimations, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLWeapon.h"));
				MetaData->SetValue(NewProp_Mesh3P, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_Mesh3P, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_Mesh3P, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLWeapon.h"));
				MetaData->SetValue(NewProp_Character, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLWeapon.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLWeapon(Z_Construct_UClass_AXLWeapon, &AXLWeapon::StaticClass, TEXT("AXLWeapon"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLWeapon);
	UClass* Z_Construct_UClass_AXLMeleeWeapon_NoRegister()
	{
		return AXLMeleeWeapon::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLMeleeWeapon()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AXLWeapon();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLMeleeWeapon::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/XLMeleeWeapon.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLMeleeWeapon.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLMeleeWeapon(Z_Construct_UClass_AXLMeleeWeapon, &AXLMeleeWeapon::StaticClass, TEXT("AXLMeleeWeapon"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLMeleeWeapon);
	UClass* Z_Construct_UClass_AXLRangedWeapon_NoRegister()
	{
		return AXLRangedWeapon::StaticClass();
	}
	UClass* Z_Construct_UClass_AXLRangedWeapon()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AXLWeapon();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = AXLRangedWeapon::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/XLRangedWeapon.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/XLRangedWeapon.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXLRangedWeapon(Z_Construct_UClass_AXLRangedWeapon, &AXLRangedWeapon::StaticClass, TEXT("AXLRangedWeapon"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXLRangedWeapon);
	UClass* Z_Construct_UClass_UXLWeaponAnimationManager_NoRegister()
	{
		return UXLWeaponAnimationManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLWeaponAnimationManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLWeaponAnimationManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ReloadAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ReloadAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReloadAnim, UXLWeaponAnimationManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_MeleeAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MeleeAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MeleeAnim, UXLWeaponAnimationManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_UnEquipAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UnEquipAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(UnEquipAnim, UXLWeaponAnimationManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_EquipAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EquipAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(EquipAnim, UXLWeaponAnimationManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLWeaponAnimationManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponAnimationManager.h"));
				MetaData->SetValue(NewProp_ReloadAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_ReloadAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponAnimationManager.h"));
				MetaData->SetValue(NewProp_ReloadAnim, TEXT("ToolTip"), TEXT("reload animations"));
				MetaData->SetValue(NewProp_MeleeAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_MeleeAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponAnimationManager.h"));
				MetaData->SetValue(NewProp_MeleeAnim, TEXT("ToolTip"), TEXT("melee animations"));
				MetaData->SetValue(NewProp_UnEquipAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_UnEquipAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponAnimationManager.h"));
				MetaData->SetValue(NewProp_UnEquipAnim, TEXT("ToolTip"), TEXT("holster animations"));
				MetaData->SetValue(NewProp_EquipAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_EquipAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponAnimationManager.h"));
				MetaData->SetValue(NewProp_EquipAnim, TEXT("ToolTip"), TEXT("equip animations"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLWeaponAnimationManager(Z_Construct_UClass_UXLWeaponAnimationManager, &UXLWeaponAnimationManager::StaticClass, TEXT("UXLWeaponAnimationManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLWeaponAnimationManager);
	UClass* Z_Construct_UClass_UXLWeaponEffectManager_NoRegister()
	{
		return UXLWeaponEffectManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLWeaponEffectManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLWeaponEffectManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_FireCameraShake = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FireCameraShake"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(FireCameraShake, UXLWeaponEffectManager), 0x0014000000010001, Z_Construct_UClass_UCameraShake_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_TrailFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TrailFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TrailFX, UXLWeaponEffectManager), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_TrailTargetParam = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TrailTargetParam"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(TrailTargetParam, UXLWeaponEffectManager), 0x0010000000010001);
				UProperty* NewProp_MuzzlePSC = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MuzzlePSC"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MuzzlePSC, UXLWeaponEffectManager), 0x0010000000082008, Z_Construct_UClass_UParticleSystemComponent_NoRegister());
				UProperty* NewProp_MuzzleFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MuzzleFX"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MuzzleFX, UXLWeaponEffectManager), 0x0010000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
				UProperty* NewProp_MuzzleFXPoint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MuzzleFXPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(MuzzleFXPoint, UXLWeaponEffectManager), 0x0010000000010001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLoopedMuzzleFX, UXLWeaponEffectManager, bool);
				UProperty* NewProp_bLoopedMuzzleFX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bLoopedMuzzleFX"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLoopedMuzzleFX, UXLWeaponEffectManager), 0x0010000000010001, CPP_BOOL_PROPERTY_BITMASK(bLoopedMuzzleFX, UXLWeaponEffectManager), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_FireCameraShake, TEXT("Category"), TEXT("CameraShake"));
				MetaData->SetValue(NewProp_FireCameraShake, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_TrailFX, TEXT("Category"), TEXT("TrailFX"));
				MetaData->SetValue(NewProp_TrailFX, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_TrailTargetParam, TEXT("Category"), TEXT("TrailFX"));
				MetaData->SetValue(NewProp_TrailTargetParam, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_MuzzlePSC, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MuzzlePSC, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_MuzzleFX, TEXT("Category"), TEXT("MuzzleFX"));
				MetaData->SetValue(NewProp_MuzzleFX, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_MuzzleFXPoint, TEXT("Category"), TEXT("MuzzleFX"));
				MetaData->SetValue(NewProp_MuzzleFXPoint, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
				MetaData->SetValue(NewProp_bLoopedMuzzleFX, TEXT("Category"), TEXT("MuzzleFX"));
				MetaData->SetValue(NewProp_bLoopedMuzzleFX, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponEffectManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLWeaponEffectManager(Z_Construct_UClass_UXLWeaponEffectManager, &UXLWeaponEffectManager::StaticClass, TEXT("UXLWeaponEffectManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLWeaponEffectManager);
	UClass* Z_Construct_UClass_UXLWeaponManager_NoRegister()
	{
		return UXLWeaponManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLWeaponManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLWeaponManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DefaultInventory = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(DefaultInventory, UXLWeaponManager), 0x0014000000010001);
				UProperty* NewProp_DefaultInventory_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DefaultInventory, TEXT("DefaultInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_AXLWeapon_NoRegister(), UClass::StaticClass());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLWeaponManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponManager.h"));
				MetaData->SetValue(NewProp_DefaultInventory, TEXT("Category"), TEXT("Inventory"));
				MetaData->SetValue(NewProp_DefaultInventory, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLWeaponManager(Z_Construct_UClass_UXLWeaponManager, &UXLWeaponManager::StaticClass, TEXT("UXLWeaponManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLWeaponManager);
	UClass* Z_Construct_UClass_UXLWeaponSoundManager_NoRegister()
	{
		return UXLWeaponSoundManager::StaticClass();
	}
	UClass* Z_Construct_UClass_UXLWeaponSoundManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_ExtendedLibrary();
			OuterClass = UXLWeaponSoundManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ReloadAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ReloadAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReloadAnim, UXLWeaponSoundManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_MeleeAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MeleeAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MeleeAnim, UXLWeaponSoundManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_UnEquipAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UnEquipAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(UnEquipAnim, UXLWeaponSoundManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
				UProperty* NewProp_EquipAnim = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EquipAnim"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(EquipAnim, UXLWeaponSoundManager), 0x0010000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Managers/XLWeaponSoundManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponSoundManager.h"));
				MetaData->SetValue(NewProp_ReloadAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_ReloadAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponSoundManager.h"));
				MetaData->SetValue(NewProp_ReloadAnim, TEXT("ToolTip"), TEXT("reload animations"));
				MetaData->SetValue(NewProp_MeleeAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_MeleeAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponSoundManager.h"));
				MetaData->SetValue(NewProp_MeleeAnim, TEXT("ToolTip"), TEXT("melee animations"));
				MetaData->SetValue(NewProp_UnEquipAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_UnEquipAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponSoundManager.h"));
				MetaData->SetValue(NewProp_UnEquipAnim, TEXT("ToolTip"), TEXT("holster animations"));
				MetaData->SetValue(NewProp_EquipAnim, TEXT("Category"), TEXT("Animation"));
				MetaData->SetValue(NewProp_EquipAnim, TEXT("ModuleRelativePath"), TEXT("Public/Managers/XLWeaponSoundManager.h"));
				MetaData->SetValue(NewProp_EquipAnim, TEXT("ToolTip"), TEXT("equip animations"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UXLWeaponSoundManager(Z_Construct_UClass_UXLWeaponSoundManager, &UXLWeaponSoundManager::StaticClass, TEXT("UXLWeaponSoundManager"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UXLWeaponSoundManager);
	UScriptStruct* Z_Construct_UScriptStruct_FTakeHitInfo()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_ExtendedLibrary();
		extern uint32 Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("TakeHitInfo"), sizeof(FTakeHitInfo), Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TakeHitInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTakeHitInfo>, EStructFlags(0x00000005));
			UProperty* NewProp_RadialDamageEvent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RadialDamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RadialDamageEvent, FTakeHitInfo), 0x0040008000000000, Z_Construct_UScriptStruct_FRadialDamageEvent());
			UProperty* NewProp_PointDamageEvent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PointDamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PointDamageEvent, FTakeHitInfo), 0x0040008000000000, Z_Construct_UScriptStruct_FPointDamageEvent());
			UProperty* NewProp_GeneralDamageEvent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GeneralDamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GeneralDamageEvent, FTakeHitInfo), 0x0040000000000000, Z_Construct_UScriptStruct_FDamageEvent());
			UProperty* NewProp_EnsureReplicationByte = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EnsureReplicationByte"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(EnsureReplicationByte, FTakeHitInfo), 0x0040000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bKilled, FTakeHitInfo, uint8);
			UProperty* NewProp_bKilled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bKilled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bKilled, FTakeHitInfo), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bKilled, FTakeHitInfo), sizeof(uint8), false);
			UProperty* NewProp_DamageEventClassID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DamageEventClassID"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(DamageEventClassID, FTakeHitInfo), 0x0010000000000000);
			UProperty* NewProp_DamageCauser = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DamageCauser"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(DamageCauser, FTakeHitInfo), 0x0014000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_PawnInstigator = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PawnInstigator"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(PawnInstigator, FTakeHitInfo), 0x0014000000000000, Z_Construct_UClass_AXLCharacter_NoRegister());
			UProperty* NewProp_DamageTypeClass = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DamageTypeClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(DamageTypeClass, FTakeHitInfo), 0x0010000000000000, Z_Construct_UClass_UObject_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_ActualDamage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ActualDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ActualDamage, FTakeHitInfo), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_RadialDamageEvent, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_RadialDamageEvent, TEXT("ToolTip"), TEXT("Describes radial damage, if that is what was received."));
			MetaData->SetValue(NewProp_PointDamageEvent, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_PointDamageEvent, TEXT("ToolTip"), TEXT("Describes point damage, if that is what was received."));
			MetaData->SetValue(NewProp_GeneralDamageEvent, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_GeneralDamageEvent, TEXT("ToolTip"), TEXT("Describes general damage."));
			MetaData->SetValue(NewProp_EnsureReplicationByte, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_EnsureReplicationByte, TEXT("ToolTip"), TEXT("A rolling counter used to ensure the struct is dirty and will replicate."));
			MetaData->SetValue(NewProp_bKilled, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_bKilled, TEXT("ToolTip"), TEXT("Rather this was a kill"));
			MetaData->SetValue(NewProp_DamageEventClassID, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_DamageEventClassID, TEXT("ToolTip"), TEXT("Specifies which DamageEvent below describes the damage received."));
			MetaData->SetValue(NewProp_DamageCauser, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_DamageCauser, TEXT("ToolTip"), TEXT("Who actually caused the damage"));
			MetaData->SetValue(NewProp_PawnInstigator, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_PawnInstigator, TEXT("ToolTip"), TEXT("Who hit us"));
			MetaData->SetValue(NewProp_DamageTypeClass, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_DamageTypeClass, TEXT("ToolTip"), TEXT("The damage type we were hit with."));
			MetaData->SetValue(NewProp_ActualDamage, TEXT("ModuleRelativePath"), TEXT("Public/Structs/XLHitInfo.h"));
			MetaData->SetValue(NewProp_ActualDamage, TEXT("ToolTip"), TEXT("The amount of damage actually applied"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC() { return 4007705936U; }
	UPackage* Z_Construct_UPackage__Script_ExtendedLibrary()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/ExtendedLibrary")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x3D9A72B7;
			Guid.B = 0x533DEC07;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
